{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":62,"endLine":62,"endCol":27,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["learningRate","a"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":29,"startCol":28,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":41,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827564","GHC.Types.Int"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":86,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Data.Foldable.$fFoldable[]","{v : (Data.Foldable.Foldable []) | v == $fFoldable[]}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":42,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827529","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":32,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827578","{v : GHC.Types.Int | v == m}"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":41,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827646","{v : (Internal.Matrix.Matrix a) | v == tr m}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":36,"startCol":17,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827675","{v : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | v == outputs n act input}"]]],[{"spanInfo":{"startLine":118,"endLine":118,"endCol":23,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827715","a"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":14,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["pr","GHC.Types.Int -> (Neuro.Network a) -> [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":25,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":36,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"a (Internal.Matrix.Matrix b)"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":61,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827658","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":52,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["nOutputs","{v : GHC.Types.Int | v == nOutputs}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":12,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.trainNTimes","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a) =>\nGHC.Types.Int -> a -> (a -> a) -> (a -> a) -> (Neuro.Network a) -> [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":40,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["alpha","{VV : a | VV == alpha}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":52,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827565","{v : [GHC.Types.Int] | tail v == hiddens\n                       && lqdc##$select v == hiddens\n                       && len v == 1 + len hiddens}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":39,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n'","{v : (Neuro.Network a) | v == backpropOnce learningRate act act' n samples}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":47,"startCol":42,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["deriv","(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":40,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":23,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["del","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":31,"startCol":28,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":48,"startCol":45,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827644","{v : (Data.Vector.Storable.Vector a) | v == del}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":25,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : a | VV == tanh x}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":65,"startCol":63,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["fp","{v : [GHC.Types.Char] | len v >= 0\n                        && v == fp}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":103,"startCol":85,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827622","{v : (Data.Vector.Storable.Vector a) | v == output net act inp}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":45,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827710","k:GHC.Types.Int -> (Neuro.Network a) -> [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> {v : GHC.Types.Bool | (v <=> k > n)\n                                                                                                                                      && v == > k n}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":16,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["k","GHC.Types.Int"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":40,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$dMonad_a7JV","{v : (GHC.Base.Monad a) | v == $p1PrimMonad\n                          && v == $dMonad_a7JV}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":37,"startCol":29,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["expected","{v : (Data.Vector.Storable.Vector a) | v == expected}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":37,"startCol":30,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))]"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":48,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827722","Data.ByteString.Lazy.Internal.ByteString -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":75,"startCol":71,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","a -> a"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":86,"startCol":79,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","{v : [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] | len v >= 0\n                                                                            && v == samples}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":26,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","{v : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen v\n                                                            && v == os}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":13,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":85,"startCol":41,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{v : (Neuro.Network a) | v == backpropOnce learningRate act act' n samples}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":51,"startCol":48,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["gen","(System.Random.MWC.Gen (GHC.Types.Any (TYPE 'GHC.Types.LiftedRep)))"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":37,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{v : (Neuro.Network a) | v == n}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":46,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827718","Data.ByteString.Lazy.Internal.ByteString -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":39,"startCol":21,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827580","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":39,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["nOutputs","GHC.Types.Int"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":54,"startCol":43,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","(Neuro.Network a) -> GHC.Types.Int -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":36,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","{v : (Data.Vector.Storable.Vector a) | v == input}"]]],[{"spanInfo":{"startLine":95,"endLine":95,"endCol":26,"startCol":17,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":60,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","{v : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen v\n                                                            && v == os}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":39,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827606","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":39,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827604","{v : (Data.Vector.Storable.Vector a) | v == inp}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":22,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["nInputs","GHC.Types.Int"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":33,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827643","{v : (Data.Vector.Storable.Vector a) | v == o}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":28,"startCol":25,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":118,"endLine":118,"endCol":16,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827712","a"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":26,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","a -> a"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":30,"startCol":23,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["hiddens","[GHC.Types.Int]"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":7,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.output","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Numeric<[]> a, Foreign.Storable.Storable<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a)) =>\n(Neuro.Network a) -> (a -> a) -> (Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":70,"startCol":67,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":39,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall a b c . (c -> c) -> c -> c | VV == $}"]]],[{"spanInfo":{"startLine":118,"endLine":118,"endCol":20,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["s","{VV : a | VV == tanh x\n          && VV == s}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":31,"startCol":30,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":19,"startCol":16,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":61,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","{v : (Neuro.Network a) | v == net}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":63,"startCol":53,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827639","{v : [(Data.Vector.Storable.Vector a)] | head v == input\n                                         && lqdc##$select v == input}"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":41,"startCol":40,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{v : (Internal.Matrix.Matrix a) | v == m}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":11,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","(System.Random.MWC.Gen (Control.Monad.Primitive.PrimState a)) -> [(GHC.Types.Int, GHC.Types.Int)] -> (Data.Vector.Vector (Internal.Matrix.Matrix b)) -> a (Data.Vector.Vector (Internal.Matrix.Matrix b))"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":82,"startCol":76,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827621","(Data.Vector.Storable.Vector a) -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":15,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["inp","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":32,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827524","[(Internal.Matrix.Matrix a)] -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":28,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827630","(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":39,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827604","{v : (Data.Vector.Storable.Vector a) | v == inp}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":29,"startCol":25,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","a -> a"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":113,"startCol":112,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827626","{v : GHC.Types.Double | v == 0.0\n                        && v == D# 0.0}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":54,"startCol":49,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827705","GHC.Types.Int"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":53,"startCol":43,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827559","{v : [GHC.Types.Int] | head v == nOutputs\n                       && lqdc##$select v == nOutputs}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":78,"startCol":77,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{v : (Neuro.Network a) | v == n}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":20,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ds","{v : [(GHC.Types.Int, GHC.Types.Int)] | len v >= 0\n                                        && v == ds}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":73,"startCol":34,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827616","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":59,"startCol":51,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","(Neuro.Network a) -> GHC.Types.Int -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":61,"startCol":51,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827723","{v : Data.ByteString.Lazy.Internal.ByteString | v == encode net}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":24,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ms","{v : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | 0 <= vlen v\n                                                       && v == ms}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":33,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827676","{v : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | v == outputs n act input\n                                                            && 0 <= vlen v}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":37,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827528","(Data.Vector.Vector (Internal.Matrix.Matrix a)) -> (Data.Binary.Put.PutM ())"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":66,"startCol":54,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["learningRate","{VV : a | VV == learningRate}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":83,"startCol":71,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827666","{v : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | v == init os}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":77,"startCol":76,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{v : (Neuro.Network a) | v == n}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":24,"startCol":21,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":33,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827645","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":49,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$dNum_a7R6","{v : (GHC.Num.Num (Data.Vector.Storable.Vector a)) | v == $p1Fractional\n                                                     && v == $dNum_a7R6}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":14,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.createNetwork","forall a .\n(System.Random.MWC.Variate<[]> a, Foreign.Storable.Storable<[]> a) =>\nGHC.Types.Int -> [GHC.Types.Int] -> GHC.Types.Int -> (GHC.Types.IO (Neuro.Network a))"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":45,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827681","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":17,"startCol":16,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","(Internal.Matrix.Matrix a)"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":18,"startCol":14,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["rate","a"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":17,"startCol":14,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ds_d8IR","(System.Random.MWC.Gen (Control.Monad.Primitive.PrimState a))"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":38,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827579","{v : (Internal.Matrix.Matrix a) | v == mat}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":10,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","(Data.Vector.Storable.Vector a) -> (Internal.Matrix.Matrix a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":39,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","{v : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen v\n                                                            && v == os}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":53,"startCol":10,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.$fBinaryNetwork","forall a .\n(Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\n(Data.Binary.Class.Binary (Neuro.Network a))"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":49,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827662","(Data.Vector.Vector (Data.Vector.Storable.Vector a))"]]],[{"spanInfo":{"startLine":76,"endLine":77,"endCol":52,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"[(GHC.Types.Int, GHC.Types.Int)]"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":96,"startCol":93,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827684","x1:(Internal.Matrix.Matrix a) -> x2:(Internal.Matrix.Matrix a) -> {v : (Internal.Matrix.Matrix a) | v == x1 + x2}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":66,"startCol":62,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["rate","{VV : a | VV == rate}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":32,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{v : (Internal.Matrix.Matrix a) | v == m}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":65,"startCol":51,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827720","{v : (GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString) | v == readFile fp}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":44,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall a b .\n      ((System.Random.MWC.Gen (Control.Monad.Primitive.PrimState (GHC.ST.ST a))) -> (GHC.ST.ST a b)) -> (System.Random.MWC.Gen (Control.Monad.Primitive.PrimState (GHC.ST.ST a))) -> (GHC.ST.ST a b) | VV == asGenST}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":26,"startCol":25,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{v : (Neuro.Network a) | v == n}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":20,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":44,"startCol":43,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{v : GHC.Types.Int | v == n}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":14,"startCol":13,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":91,"endLine":95,"endCol":26,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827663","{v : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen v}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":37,"startCol":28,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall a . (Data.Vector.Vector a) -> [a] | VV == toList}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":110,"startCol":82,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827686","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":61,"startCol":41,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827657","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":12,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.loadNetwork","forall a .\n(Foreign.Storable.Storable<[]> a, Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\n[GHC.Types.Char] -> (GHC.Types.IO (Neuro.Network a))"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":36,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{v : GHC.Types.Int | v == m}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":18,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["randomMat","forall a b .\n(Foreign.Storable.Storable<[]> b, Control.Monad.Primitive.PrimMonad<[]> a, System.Random.MWC.Variate<[]> b) =>\nGHC.Types.Int -> GHC.Types.Int -> (System.Random.MWC.Gen (Control.Monad.Primitive.PrimState a)) -> a (Internal.Matrix.Matrix b)"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":99,"startCol":96,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":121,"startCol":114,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","{v : [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] | len v >= 0\n                                                                            && v == samples}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":70,"startCol":67,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":22,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ws","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":22,"startCol":21,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","GHC.Types.Int"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":15,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["mat","(Internal.Matrix.Matrix a)"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":26,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))]"]]],[{"spanInfo":{"startLine":63,"endLine":65,"endCol":54,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827702","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":45,"startCol":28,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | (v <=> k > n)\n                      && v == > k n}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":22,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":36,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","a -> a"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":59,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["g","{v : (System.Random.MWC.Gen (Control.Monad.Primitive.PrimState a)) | v == g}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":62,"startCol":61,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{v : GHC.Types.Int | v == n}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":27,"startCol":23,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","a -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":39,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["hiddens","{v : [GHC.Types.Int] | len v >= 0\n                       && v == hiddens}"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":49,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827647","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":37,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827721","Data.ByteString.Lazy.Internal.ByteString -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":75,"startCol":71,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","a -> a"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":38,"startCol":30,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["expected","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":63,"startCol":53,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827614","{v : [(Data.Vector.Storable.Vector a)] | head v == input\n                                         && lqdc##$select v == input}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":44,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827597","((System.Random.MWC.Gen (GHC.Types.Any (TYPE 'GHC.Types.LiftedRep))) -> (GHC.ST.ST (GHC.Types.Any (TYPE 'GHC.Types.LiftedRep)) (Data.Vector.Vector (Internal.Matrix.Matrix a)))) -> (GHC.Types.IO (Data.Vector.Vector (Internal.Matrix.Matrix a)))"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":15,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827591","(GHC.Types.IO (Data.Vector.Vector (Internal.Matrix.Matrix a))) -> (GHC.Types.IO (Neuro.Network a))"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":83,"startCol":41,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Data.Vector.zipWith","{VV : forall a b c .\n      (a -> b -> c) -> (Data.Vector.Vector a) -> (Data.Vector.Vector b) -> (Data.Vector.Vector c) | VV == zipWith}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":72,"startCol":62,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["dimensions","{v : [(GHC.Types.Int, GHC.Types.Int)] | len v >= 0\n                                        && v == dimensions}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":81,"startCol":73,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall a .\n      {v : (Data.Vector.Vector a) | v == empty} | VV == empty}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":6,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$cget","forall a .\n(Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\n(Data.Binary.Get.Internal.Get (Neuro.Network a))"]]],[{"spanInfo":{"startLine":95,"endLine":95,"endCol":26,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","a -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":54,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827561","x1:[GHC.Types.Int] -> {v : [(GHC.Types.Int, GHC.Types.Int)] | len v <= len x1}"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":41,"startCol":33,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827679","{VV : a | VV == (-alpha)\n          && VV == negate alpha}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":29,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","(Data.Vector.Vector (Data.Vector.Storable.Vector a))"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":10,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","((Data.Vector.Storable.Vector a), (Internal.Matrix.Matrix a)) -> (Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":69,"startCol":67,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827663","{v : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen v}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":28,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827659","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":41,"startCol":40,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827563","GHC.Types.Int"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":25,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","((Data.Vector.Storable.Vector a), (Internal.Matrix.Matrix a)) -> (Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":25,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":48,"startCol":40,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Codec.Compression.Zlib.compress","Data.ByteString.Lazy.Internal.ByteString -> Data.ByteString.Lazy.Internal.ByteString"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":15,"startCol":13,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["fp","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":76,"startCol":47,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827698","(Neuro.Network a) -> ((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a)) -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":26,"startCol":23,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":19,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["dimensions","[(GHC.Types.Int, GHC.Types.Int)]"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":10,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.quadError","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, GHC.Real.Fractional<[]> (Internal.Numeric.RealOf a), Internal.Util.Normed<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Numeric<[]> a) =>\n(a -> a) -> (Neuro.Network a) -> [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> (Internal.Numeric.RealOf a)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":28,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827605","(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":33,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","{v : [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] | len v >= 0\n                                                                            && v == samples}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":39,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827629","{v : (Data.Vector.Storable.Vector a) | v == inp}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":110,"startCol":72,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827683","v_B1:(Data.Vector.Vector (Internal.Matrix.Matrix a)) -> {VV : (Neuro.Network a) | VV ~~ v_B1}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":25,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827526","[(Internal.Matrix.Matrix a)] -> (Data.Binary.Put.PutM ())"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":30,"startCol":29,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827577","{v : GHC.Types.Int | v == n}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":8,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.outputs","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Numeric<[]> a, Foreign.Storable.Storable<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a)) =>\n(Neuro.Network a) -> (a -> a) -> (Data.Vector.Storable.Vector a) -> (Data.Vector.Vector (Data.Vector.Storable.Vector a))"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":110,"startCol":69,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Float.$fNumDouble","{v : (GHC.Num.Num GHC.Types.Double) | v == $fNumDouble}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":6,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.tanh'","forall a . (GHC.Float.Floating<[]> a) => a -> a"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":30,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","a -> a"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":81,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall a b c . (c -> c) -> c -> c | VV == $}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":32,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{v : (Internal.Matrix.Matrix a) | v == m}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":57,"startCol":54,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","{v : (Neuro.Network a) | v == net}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":39,"startCol":29,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827619","GHC.Types.Double -> (Internal.Numeric.RealOf a)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":10,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","(Data.Vector.Storable.Vector a) -> (Internal.Matrix.Matrix a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":34,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827593","((System.Random.MWC.Gen (Control.Monad.Primitive.PrimState (GHC.ST.ST (GHC.Types.Any (TYPE 'GHC.Types.LiftedRep))))) -> (GHC.ST.ST (GHC.Types.Any (TYPE 'GHC.Types.LiftedRep)) (Data.Vector.Vector (Internal.Matrix.Matrix a)))) -> (GHC.Types.IO (Data.Vector.Vector (Internal.Matrix.Matrix a)))"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":42,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827680","(Internal.Matrix.Matrix a) -> (Internal.Matrix.Matrix a)"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":15,"startCol":13,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["fp","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":17,"startCol":16,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","(Internal.Matrix.Matrix a)"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":64,"startCol":46,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827615","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":46,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827719","Data.ByteString.Lazy.Internal.ByteString -> (GHC.Types.IO (Neuro.Network a))"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":25,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{v : (Neuro.Network a) | v == n}"]]],[{"spanInfo":{"startLine":117,"endLine":118,"endCol":23,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$dNum_a7R4","{v : (GHC.Num.Num a) | v == $p1Fractional\n                       && v == $dNum_a7R4}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":14,"startCol":11,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":54,"startCol":51,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["err","GHC.Types.Double"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":109,"startCol":106,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["out","{v : (Data.Vector.Storable.Vector a) | v == out}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":65,"startCol":60,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827569","{v : GHC.Types.Int | v == n * m\n                     && v == * n m}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":110,"startCol":75,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827624","GHC.Types.Double"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":81,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827602","(GHC.Types.IO (Data.Vector.Vector (Internal.Matrix.Matrix a)))"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":65,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827570","a (Data.Vector.Storable.Vector b)"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":25,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{v : (Neuro.Network a) | v == n}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":23,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827700","{v : GHC.Types.Int | v == k}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":60,"startCol":50,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827656","{v : (Data.Vector.Storable.Vector a) | v == last os}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":57,"startCol":52,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827664","(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a) -> (Internal.Matrix.Matrix a)"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":62,"startCol":61,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827636","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":18,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":43,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Data.Binary.Get.Internal.$fFunctorGet","{v : (GHC.Base.Functor Data.Binary.Get.Internal.Get) | v == $fFunctorGet}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":31,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":45,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","(Data.Vector.Storable.Vector a) -> (Internal.Matrix.Matrix a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":26,"startCol":16,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827654","{v : (Data.Vector.Storable.Vector a) | v == last os}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":59,"startCol":54,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","{v : (Data.Vector.Storable.Vector a) | v == input}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":65,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{v : (GHC.Base.Monad GHC.Types.IO) | v == $fMonadIO}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":20,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["alpha","a"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":48,"startCol":46,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n'","{v : (Neuro.Network a) | v == backpropOnce learningRate act act' n samples\n                         && v == n'}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":13,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.backpropOnce","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a) =>\na -> (a -> a) -> (a -> a) -> (Neuro.Network a) -> [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":54,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827560","[GHC.Types.Int]"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":85,"startCol":78,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","{v : [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] | len v >= 0\n                                                                            && v == samples}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":7,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.deltas","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a)) =>\n(Neuro.Network a) -> (a -> a) -> (Data.Vector.Vector (Data.Vector.Storable.Vector a)) -> (Data.Vector.Storable.Vector a) -> (Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":31,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall a .\n      x1:[a] -> {v : (Data.Vector.Vector a) | vlen v == len x1} | VV == fromList}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":43,"startCol":40,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827525","{v : (Data.Binary.Get.Internal.Get [(Internal.Matrix.Matrix a)]) | v == get}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":38,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827655","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":11,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","(Neuro.Network a) -> GHC.Types.Int -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":109,"startCol":85,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827623","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":48,"startCol":17,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827677","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":65,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$dFunctor_a7aK","{v : (GHC.Base.Functor a) | v == $p1Applicative\n                            && v == $dFunctor_a7aK}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":49,"startCol":29,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827661","(Data.Vector.Vector ((Data.Vector.Storable.Vector a), (Internal.Matrix.Matrix a)))"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":121,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall a b c . (c -> c) -> c -> c | VV == $}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":70,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827665","(Data.Vector.Vector (Data.Vector.Storable.Vector a))"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":37,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["fp","{v : [GHC.Types.Char] | len v >= 0\n                        && v == fp}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":8,"startCol":7,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":30,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":6,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$cput","forall a .\n(Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\n(Neuro.Network a) -> (Data.Binary.Put.PutM ())"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":16,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["s","{VV : a | VV == tanh x}"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":19,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.fromWeightMatrices","forall a .\n(Foreign.Storable.Storable<[]> a) =>\n(Data.Vector.Vector (Internal.Matrix.Matrix a)) -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":51,"startCol":50,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827700","{v : GHC.Types.Int | v == k}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":53,"startCol":52,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827704","GHC.Types.Int"]]],[{"spanInfo":{"startLine":98,"endLine":101,"endCol":45,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827682","{v : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | 0 <= vlen v}"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":49,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827644","{v : (Data.Vector.Storable.Vector a) | v == del}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":39,"startCol":11,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","(System.Random.MWC.Gen (Control.Monad.Primitive.PrimState a)) -> [(GHC.Types.Int, GHC.Types.Int)] -> (Data.Vector.Vector (Internal.Matrix.Matrix b)) -> a (Data.Vector.Vector (Internal.Matrix.Matrix b))"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":111,"startCol":49,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827620","((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":81,"startCol":47,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827600","{v : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | v == empty}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":64,"startCol":46,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827640","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":45,"startCol":43,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827678","{v : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | 0 <= vlen v}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":82,"startCol":80,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","{v : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen v\n                                                            && v == os}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":33,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827717","Data.ByteString.Lazy.Internal.ByteString -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":20,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ms","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":40,"startCol":38,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827572","{v : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | 0 <= vlen v\n                                                       && v == ms}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":48,"startCol":41,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))]"]]],[{"spanInfo":{"startLine":72,"endLine":74,"endCol":39,"startCol":34,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827579","{v : (Internal.Matrix.Matrix a) | v == mat}"]]],[{"spanInfo":{"startLine":95,"endLine":95,"endCol":14,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["deriv","(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":39,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827631","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":48,"startCol":34,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["expectedOutput","{v : (Data.Vector.Storable.Vector a) | v == expectedOutput}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":39,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["nInputs","{v : GHC.Types.Int | v == nInputs}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":121,"startCol":42,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827627","GHC.Types.Double"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":62,"startCol":61,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827611","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":61,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall a b c . (c -> c) -> c -> c | VV == $}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":36,"startCol":33,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ds_d8IR","(System.Random.MWC.Gen (Control.Monad.Primitive.PrimState a))"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":51,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["hiddens","{v : [GHC.Types.Int] | len v >= 0\n                       && v == hiddens}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":40,"startCol":39,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["k","{v : GHC.Types.Int | v == k}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":59,"startCol":54,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","{v : (Data.Vector.Storable.Vector a) | v == input}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":110,"startCol":106,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827682","{v : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | 0 <= vlen v}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":64,"startCol":63,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{v : GHC.Types.Int | v == m}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":31,"startCol":30,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["k","GHC.Types.Int"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":24,"startCol":23,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["g","(System.Random.MWC.Gen (Control.Monad.Primitive.PrimState a))"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":95,"startCol":92,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","{v : (Neuro.Network a) | v == net}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":36,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827568","(Data.Vector.Storable.Vector a) -> (Internal.Matrix.Matrix a)"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":72,"startCol":69,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["err","{v : GHC.Types.Double | v == err}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":103,"startCol":100,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["inp","{v : (Data.Vector.Storable.Vector a) | v == inp}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":32,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":45,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","(Data.Vector.Storable.Vector a) -> (Internal.Matrix.Matrix a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":11,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.trainUntil","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a) =>\n(GHC.Types.Int -> (Neuro.Network a) -> [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> GHC.Types.Bool) -> a -> (a -> a) -> (a -> a) -> (Neuro.Network a) -> [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":68,"endLine":77,"endCol":52,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827567","{v : (GHC.Base.Applicative a) | v == $p1Monad}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":59,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827708","GHC.Types.Int"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":39,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall a b c . (c -> c) -> c -> c | VV == $}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":12,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.saveNetwork","forall a .\n(Foreign.Storable.Storable<[]> a, Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\n[GHC.Types.Char] -> (Neuro.Network a) -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":28,"startCol":25,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","a -> a"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":39,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827629","{v : (Data.Vector.Storable.Vector a) | v == inp}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":14,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.updateNetwork","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, Foreign.Storable.Storable<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a) =>\na -> (a -> a) -> (a -> a) -> (Neuro.Network a) -> ((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a)) -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":33,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827701","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":15,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["inp","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":118,"endLine":118,"endCol":23,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827714","a"]]],[{"spanInfo":{"startLine":71,"endLine":74,"endCol":39,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827578","{v : GHC.Types.Int | v == m}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":46,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Codec.Compression.Zlib.decompress","Data.ByteString.Lazy.Internal.ByteString -> Data.ByteString.Lazy.Internal.ByteString"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":73,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827641","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":24,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall a . a -> (GHC.Types.IO a) | VV == return}"]]]],"o_templs":[[{"spanInfo":{"startLine":62,"endLine":62,"endCol":27,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["learningRate","a"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":29,"startCol":28,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":41,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827564","{lq_tmp$x##2606 : GHC.Types.Int | lq_tmp$x##2606 == nInputs##a5L2 + lq_anf$##7205759403792827563##d8PN\n                                  && lq_tmp$x##2606 == GHC.Num.+ nInputs##a5L2 lq_anf$##7205759403792827563##d8PN}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":86,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Data.Foldable.$fFoldable[]","{lq_tmp$x##6977 : (Data.Foldable.Foldable []) | lq_tmp$x##6977 == Data.Foldable.$fFoldable[]}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":42,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827529","{VV : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | VV ~~ ds_d8OQ}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":32,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827578","{lq_tmp$x##3276 : GHC.Types.Int | $k_##2984[VV##2983:=lq_tmp$x##3276][VV##2988:=lq_anf$##7205759403792827576##d8Q0][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3032:=lq_tmp$x##3276][lq_tmp$x##3035:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3131:=lq_tmp$x##3276][lq_tmp$x##3134:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3177:=lq_tmp$x##3276][lq_tmp$x##3180:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3184:=lq_tmp$x##3276][lq_tmp$x##3187:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3198:=n##a5La][lq_tmp$x##3227:=lq_tmp$x##3276][lq_tmp$x##3229:=lq_tmp$x##3276]\n                                  && $k_##2987[VV##2986:=lq_tmp$x##3276][VV##2988:=lq_anf$##7205759403792827576##d8Q0][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2985:=n##a5La][lq_tmp$x##3018:=n##a5La][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3024:=n##a5La][lq_tmp$x##3033:=n##a5La][lq_tmp$x##3034:=lq_tmp$x##3276][lq_tmp$x##3035:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3043:=n##a5La][lq_tmp$x##3132:=n##a5La][lq_tmp$x##3133:=lq_tmp$x##3276][lq_tmp$x##3134:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3142:=n##a5La][lq_tmp$x##3178:=n##a5La][lq_tmp$x##3179:=lq_tmp$x##3276][lq_tmp$x##3180:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3181:=n##a5La][lq_tmp$x##3184:=lq_tmp$x##3276][lq_tmp$x##3185:=n##a5La][lq_tmp$x##3186:=lq_tmp$x##3276][lq_tmp$x##3187:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3188:=n##a5La][lq_tmp$x##3198:=n##a5La][lq_tmp$x##3227:=lq_tmp$x##3276][lq_tmp$x##3229:=lq_tmp$x##3276]\n                                  && lq_tmp$x##3276 == m##a5Lb\n                                  && lq_tmp$x##3276 == lq_anf$##7205759403792827588##d8Qc\n                                  && lq_tmp$x##3276 == lq_anf$##7205759403792827588##d8Qc\n                                  && lq_tmp$x##3276 == lq_anf$##7205759403792827588##d8Qc\n                                  && lq_tmp$x##3276 == lq_anf$##7205759403792827578##d8Q2}"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":41,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827646","{lq_tmp$x##5619 : (Internal.Matrix.Matrix a) | lq_tmp$x##5619 == Internal.Numeric.tr m##a5NL}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":36,"startCol":17,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827675","{lq_tmp$x##6315 : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | lq_tmp$x##6315 == Neuro.outputs n##a5NQ act##a5NO input##a5NS}"]]],[{"spanInfo":{"startLine":118,"endLine":118,"endCol":23,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827715","{lq_tmp$x##7968 : a | lq_tmp$x##7968 == GHC.Float.** s##a5XT lq_anf$##7205759403792827714##d8Se}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":14,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["pr","lq_tmp$x##7113:GHC.Types.Int -> lq_tmp$x##7114:(Neuro.Network a) -> lq_tmp$x##7115:[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":25,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["x","{lq_tmp$x##7925 : a | lq_tmp$x##7925 == x##a5XS}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":36,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{lq_tmp$x##3254 : {lq_tmp$x##3267 : m | $k_##2745[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2744:=lq_tmp$x##3267][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3251:=lq_tmp$x##3267][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR]} {lq_tmp$x##3253 : (Internal.Matrix.Matrix {lq_tmp$x##3268 : t | $k_##2747[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2746:=lq_tmp$x##3268][VV##2748:=lq_tmp$x##3253][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3252:=lq_tmp$x##3268][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR]}) | $k_##2749[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2748:=lq_tmp$x##3253][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR]} | $k_##2751[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2750:=lq_tmp$x##3254][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR]\nlq_tmp$x##3254 == randomMat##a5L6 lq_anf$##7205759403792827577##d8Q1 lq_anf$##7205759403792827578##d8Q2 ds_d8IR}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":61,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827658","{lq_tmp$x##5768 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5768 == lq_anf$##7205759403792827655##d8Rh * lq_anf$##7205759403792827657##d8Rj\n                                                    && lq_tmp$x##5768 == GHC.Num.* lq_anf$##7205759403792827655##d8Rh lq_anf$##7205759403792827657##d8Rj}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":52,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["nOutputs","{lq_tmp$x##2502 : GHC.Types.Int | lq_tmp$x##2502 == nOutputs##a5L4}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":12,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.trainNTimes","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a) =>\nlq_tmp$x##7564:GHC.Types.Int -> lq_tmp$x##7565:a -> lq_tmp$x##7566:(lq_tmp$x##7554:a -> a) -> lq_tmp$x##7567:(lq_tmp$x##7555:a -> a) -> lq_tmp$x##7568:(Neuro.Network a) -> lq_tmp$x##7569:[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":40,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["alpha","{lq_tmp$x##6499 : a | lq_tmp$x##6499 == alpha##a5NN}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":52,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827565","{lq_tmp$x##2620 : [{lq_tmp$x##2630 : GHC.Types.Int | $k_##2629[VV##2628:=lq_tmp$x##2630][lq_tmp$x##2624:=lq_anf$##7205759403792827564##d8PO][lq_tmp$x##2625:=hiddens##a5L3]}]<\\lq_tmp$x##2627 VV -> {lq_tmp$x##2630 : GHC.Types.Int | $k_##2632[VV##2631:=lq_tmp$x##2630][lq_tmp$x##2624:=lq_anf$##7205759403792827564##d8PO][lq_tmp$x##2625:=hiddens##a5L3][lq_tmp$x##2633:=lq_tmp$x##2627]}> | tail lq_tmp$x##2620 == hiddens##a5L3\n                                                                                                                                                                                                                                                                                                                                                                                                 && head lq_tmp$x##2620 == lq_anf$##7205759403792827564##d8PO\n                                                                                                                                                                                                                                                                                                                                                                                                 && lqdc##$select##GHC.Types.:##2 lq_tmp$x##2620 == hiddens##a5L3\n                                                                                                                                                                                                                                                                                                                                                                                                 && lqdc##$select##GHC.Types.:##1 lq_tmp$x##2620 == lq_anf$##7205759403792827564##d8PO\n                                                                                                                                                                                                                                                                                                                                                                                                 && (is$GHC.Types.: lq_tmp$x##2620 <=> true)\n                                                                                                                                                                                                                                                                                                                                                                                                 && (is$GHC.Types.[] lq_tmp$x##2620 <=> false)\n                                                                                                                                                                                                                                                                                                                                                                                                 && len lq_tmp$x##2620 == 1 + len hiddens##a5L3\n                                                                                                                                                                                                                                                                                                                                                                                                 && lq_tmp$x##2620 == GHC.Types.: lq_anf$##7205759403792827564##d8PO hiddens##a5L3\n                                                                                                                                                                                                                                                                                                                                                                                                 && lq_tmp$x##2620 == GHC.Types.: lq_anf$##7205759403792827564##d8PO hiddens##a5L3}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":39,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n'","{lq_tmp$x##7322 : (Neuro.Network a) | lq_tmp$x##7322 == Neuro.backpropOnce learningRate##a5KT act##a5KU act'##a5KV n##a5KZ samples##a5KX}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":47,"startCol":42,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["deriv","lq_tmp$x##5752:(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":40,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":23,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["del","{VV##5489 : (Data.Vector.Storable.Vector {VV##5487 : a | $k_##5488}) | $k_##5490}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":31,"startCol":28,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##7119:a -> a"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":48,"startCol":45,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827644","{lq_tmp$x##5648 : (Data.Vector.Storable.Vector {lq_tmp$x##5647 : a | $k_##5488[VV##5487:=lq_tmp$x##5647][VV##5489:=lq_tmp$x##5648][lq_tmp$x##5569:=lq_tmp$x##5647][lq_tmp$x##5570:=lq_tmp$x##5648][lq_tmp$x##5572:=lq_tmp$x##5647][lq_tmp$x##5573:=lq_tmp$x##5648]\n                                                                     && $k_##5488[VV##5487:=lq_tmp$x##5647][VV##5489:=lq_anf$##7205759403792827644##d8R6][lq_tmp$x##5569:=lq_tmp$x##5647][lq_tmp$x##5570:=lq_anf$##7205759403792827644##d8R6][lq_tmp$x##5572:=lq_tmp$x##5647][lq_tmp$x##5573:=lq_anf$##7205759403792827644##d8R6][lq_tmp$x##5582:=lq_anf$##7205759403792827648##d8Ra][lq_tmp$x##5583:=lq_anf$##7205759403792827649##d8Rb][lq_tmp$x##5584:=lq_anf$##7205759403792827650##d8Rc]}) | $k_##5490[VV##5489:=lq_tmp$x##5648][lq_tmp$x##5570:=lq_tmp$x##5648][lq_tmp$x##5573:=lq_tmp$x##5648]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5648 == del##a5NM\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5648 == Data.Vector.Storable.Vector lq_anf$##7205759403792827648##d8Ra lq_anf$##7205759403792827649##d8Rb lq_anf$##7205759403792827650##d8Rc\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5648 == Data.Vector.Storable.Vector lq_anf$##7205759403792827648##d8Ra lq_anf$##7205759403792827649##d8Rb lq_anf$##7205759403792827650##d8Rc\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5648 == Data.Vector.Storable.Vector lq_anf$##7205759403792827648##d8Ra lq_anf$##7205759403792827649##d8Rb lq_anf$##7205759403792827650##d8Rc\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5648 == lq_anf$##7205759403792827644##d8R6}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":25,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{lq_tmp$x##7922 : a | lq_tmp$x##7922 == GHC.Float.tanh x##a5XS}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":65,"startCol":63,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["fp","{lq_tmp$x##8150 : [GHC.Types.Char] | len lq_tmp$x##8150 >= 0\n                                     && lq_tmp$x##8150 == fp##a5XU}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":103,"startCol":85,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827622","{lq_tmp$x##4644 : (Data.Vector.Storable.Vector a) | lq_tmp$x##4644 == Neuro.output net##a5XN act##a5XM inp##a5XQ}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":45,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827710","k##a505:{VV##7614 : GHC.Types.Int | $k_##7615} -> ds_d8On:{VV##7619 : (Neuro.Network {VV##7617 : a | $k_##7618}) | $k_##7620} -> ds_d8Oo:{VV##7653 : [{VV##7635 : ({VV##7624 : (Data.Vector.Storable.Vector {VV##7622 : a | $k_##7623}) | $k_##7625}, {VV##7628 : (Data.Vector.Storable.Vector {VV##7626 : a | $k_##7627}) | $k_##7629})<\\lq_tmp$x##7630 VV -> {VV##7633 : (Data.Vector.Storable.Vector {VV##7631 : a | $k_##7632}) | $k_##7634}> | $k_##7636}]<\\lq_tmp$x##7637 VV -> {VV##7651 : ({VV##7640 : (Data.Vector.Storable.Vector {VV##7638 : a | $k_##7639}) | $k_##7641}, {VV##7644 : (Data.Vector.Storable.Vector {VV##7642 : a | $k_##7643}) | $k_##7645})<\\lq_tmp$x##7646 VV -> {VV##7649 : (Data.Vector.Storable.Vector {VV##7647 : a | $k_##7648}) | $k_##7650}> | $k_##7652}> | $k_##7654} -> {lq_tmp$x##7660 : GHC.Types.Bool | (lq_tmp$x##7660 <=> k##a505 > n##a504)\nlq_tmp$x##7660 == GHC.Classes.> k##a505 n##a504}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":16,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["k","{VV##7191 : GHC.Types.Int | $k_##7192[lq_tmp$x##7197:=n##a5KZ][n##a5KZ:=n##a5KZ]}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":40,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$dMonad_a7JV","{lq_tmp$x##3117 : (GHC.Base.Monad m) | lq_tmp$x##3117 == Control.Monad.Primitive.$p1PrimMonad\n                                       && lq_tmp$x##3117 == Control.Monad.Primitive.$p1PrimMonad\n                                       && lq_tmp$x##3117 == $dMonad_a7JV}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":37,"startCol":29,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["expected","{lq_tmp$x##5705 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5705 == expected##a5NF}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":37,"startCol":30,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))]"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":48,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827722","lq_tmp$x##8263:{lq_tmp$x##8275 : Data.ByteString.Lazy.Internal.ByteString | $k_##8274[VV##8273:=lq_tmp$x##8275][lq_tmp$x##8261:=lq_anf$##7205759403792827721##d8Sl][lq_tmp$x##8262:=Codec.Compression.Zlib.compress]} -> {lq_tmp$x##8272 : (GHC.Types.IO {lq_tmp$x##8271 : () | $k_##8268[VV##8267:=lq_tmp$x##8271][VV##8269:=lq_tmp$x##8272][lq_tmp$x##8261:=lq_anf$##7205759403792827721##d8Sl][lq_tmp$x##8262:=Codec.Compression.Zlib.compress]}) | $k_##8270[VV##8269:=lq_tmp$x##8272][lq_tmp$x##8261:=lq_anf$##7205759403792827721##d8Sl][lq_tmp$x##8262:=Codec.Compression.Zlib.compress]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                       && lq_tmp$x##8272 == GHC.Base.. lq_anf$##7205759403792827721##d8Sl Codec.Compression.Zlib.compress lq_tmp$x##8263\n                                                                                                                                                                                                                                                                                                                                                                                                                                                       && lq_tmp$x##8272 == lq_anf$##7205759403792827721##d8Sl (Codec.Compression.Zlib.compress lq_tmp$x##8263)}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":75,"startCol":71,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","lq_tmp$x##7373:a -> a"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":86,"startCol":79,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","{lq_tmp$x##7045 : [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] | len lq_tmp$x##7045 >= 0\n                                                                                         && lq_tmp$x##7045 == samples##a5O1}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":26,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","{lq_tmp$x##5684 : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen lq_tmp$x##5684\n                                                                         && lq_tmp$x##5684 == os##a5NE}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":13,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{VV##7189 : (Neuro.Network {VV##7187 : a | $k_##7188}) | $k_##7190}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":85,"startCol":41,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{lq_tmp$x##7322 : (Neuro.Network a) | lq_tmp$x##7322 == Neuro.backpropOnce learningRate##a5KT act##a5KU act'##a5KV n##a5KZ samples##a5KX}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":51,"startCol":48,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["gen","{VV##3749 : (System.Random.MWC.Gen {VV##3747 : (GHC.Types.Any {VV##3745 : (TYPE {VV##3743 : 'GHC.Types.LiftedRep | $k_##3744}) | $k_##3746}) | $k_##3748}) | $k_##3750}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":37,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{lq_tmp$x##7441 : (Neuro.Network {lq_tmp$x##7440 : a | $k_##7188[VV##7187:=lq_tmp$x##7440][VV##7189:=lq_tmp$x##7441]}) | $k_##7190[VV##7189:=lq_tmp$x##7441]\n                                                                                                                         && lq_tmp$x##7441 == n##a5KZ}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":46,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827718","lq_tmp$x##8067:{lq_tmp$x##8079 : Data.ByteString.Lazy.Internal.ByteString | $k_##8078[VV##8077:=lq_tmp$x##8079][lq_tmp$x##8065:=lq_anf$##7205759403792827717##d8Sh][lq_tmp$x##8066:=Codec.Compression.Zlib.decompress]} -> {lq_tmp$x##8076 : (Neuro.Network {lq_tmp$x##8075 : a | $k_##8072[VV##8071:=lq_tmp$x##8075][VV##8073:=lq_tmp$x##8076][lq_tmp$x##8065:=lq_anf$##7205759403792827717##d8Sh][lq_tmp$x##8066:=Codec.Compression.Zlib.decompress]}) | $k_##8074[VV##8073:=lq_tmp$x##8076][lq_tmp$x##8065:=lq_anf$##7205759403792827717##d8Sh][lq_tmp$x##8066:=Codec.Compression.Zlib.decompress]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                           && lq_tmp$x##8076 == GHC.Base.. lq_anf$##7205759403792827717##d8Sh Codec.Compression.Zlib.decompress lq_tmp$x##8067\n                                                                                                                                                                                                                                                                                                                                                                                                                                                           && lq_tmp$x##8076 == lq_anf$##7205759403792827717##d8Sh (Codec.Compression.Zlib.decompress lq_tmp$x##8067)}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":39,"startCol":21,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827580","{lq_tmp$x##3348 : (Data.Vector.Vector {lq_tmp$x##3358 : (Internal.Matrix.Matrix {lq_tmp$x##3357 : t | $k_##3354[VV##3353:=lq_tmp$x##3357][VV##3355:=lq_tmp$x##3358][lq_tmp$x##3351:=ms##a5L8][lq_tmp$x##3352:=lq_anf$##7205759403792827579##d8Q3]}) | $k_##3356[VV##3355:=lq_tmp$x##3358][lq_tmp$x##3351:=ms##a5L8][lq_tmp$x##3352:=lq_anf$##7205759403792827579##d8Q3]}) | lq_tmp$x##3348 == Data.Vector.snoc ms##a5L8 lq_anf$##7205759403792827579##d8Q3}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":39,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["nOutputs","GHC.Types.Int"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":54,"startCol":43,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","lq_tmp$x##7197:{VV##7189 : (Neuro.Network {VV##7187 : a | $k_##7188}) | $k_##7190} -> lq_tmp$x##7198:{VV##7191 : GHC.Types.Int | $k_##7192[n##a5KZ:=lq_tmp$x##7197]} -> {VV##7195 : (Neuro.Network {VV##7193 : a | $k_##7194[k##a5L0:=lq_tmp$x##7198][n##a5KZ:=lq_tmp$x##7197]}) | $k_##7196[k##a5L0:=lq_tmp$x##7198][n##a5KZ:=lq_tmp$x##7197]}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":36,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","{lq_tmp$x##6349 : (Data.Vector.Storable.Vector a) | lq_tmp$x##6349 == input##a5NS}"]]],[{"spanInfo":{"startLine":95,"endLine":95,"endCol":26,"startCol":17,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"lq_tmp$x##5457:(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":60,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","{lq_tmp$x##5720 : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen lq_tmp$x##5720\n                                                                         && lq_tmp$x##5720 == os##a5NE}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":39,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827606","{lq_tmp$x##4185 : (Data.Vector.Storable.Vector a) | lq_tmp$x##4185 == Internal.Container.#> m##a5MF lq_anf$##7205759403792827604##d8Qs}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":39,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827604","{lq_tmp$x##4198 : (Data.Vector.Storable.Vector {lq_tmp$x##4197 : a | $k_##4100[VV##4099:=lq_tmp$x##4197][VV##4101:=lq_tmp$x##4198][lq_tmp$x##4113:=lq_tmp$x##4197][lq_tmp$x##4114:=lq_tmp$x##4198][lq_tmp$x##4116:=lq_tmp$x##4197][lq_tmp$x##4117:=lq_tmp$x##4198]\n                                                                     && $k_##4100[VV##4099:=lq_tmp$x##4197][VV##4101:=lq_anf$##7205759403792827604##d8Qs][lq_tmp$x##4113:=lq_tmp$x##4197][lq_tmp$x##4114:=lq_anf$##7205759403792827604##d8Qs][lq_tmp$x##4116:=lq_tmp$x##4197][lq_tmp$x##4117:=lq_anf$##7205759403792827604##d8Qs][lq_tmp$x##4126:=lq_anf$##7205759403792827607##d8Qv][lq_tmp$x##4127:=lq_anf$##7205759403792827608##d8Qw][lq_tmp$x##4128:=lq_anf$##7205759403792827609##d8Qx]}) | $k_##4102[VV##4101:=lq_tmp$x##4198][lq_tmp$x##4114:=lq_tmp$x##4198][lq_tmp$x##4117:=lq_tmp$x##4198]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##4198 == inp##a5ME\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##4198 == Data.Vector.Storable.Vector lq_anf$##7205759403792827607##d8Qv lq_anf$##7205759403792827608##d8Qw lq_anf$##7205759403792827609##d8Qx\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##4198 == Data.Vector.Storable.Vector lq_anf$##7205759403792827607##d8Qv lq_anf$##7205759403792827608##d8Qw lq_anf$##7205759403792827609##d8Qx\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##4198 == Data.Vector.Storable.Vector lq_anf$##7205759403792827607##d8Qv lq_anf$##7205759403792827608##d8Qw lq_anf$##7205759403792827609##d8Qx\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##4198 == lq_anf$##7205759403792827604##d8Qs}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":22,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["nInputs","GHC.Types.Int"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":33,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827643","{lq_tmp$x##5605 : (Data.Vector.Storable.Vector {lq_tmp$x##5604 : a | $k_##5472[VV##5471:=lq_tmp$x##5604][VV##5473:=lq_tmp$x##5605][VV##5484:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5496:=lq_tmp$x##5604][lq_tmp$x##5497:=lq_tmp$x##5605][lq_tmp$x##5503:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5506:=lq_tmp$x##5604][lq_tmp$x##5507:=lq_tmp$x##5605][lq_tmp$x##5513:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5540:=lq_tmp$x##5604][lq_tmp$x##5541:=lq_tmp$x##5605][lq_tmp$x##5543:=lq_tmp$x##5604][lq_tmp$x##5544:=lq_tmp$x##5605]\n                                                                     && $k_##5472[VV##5471:=lq_tmp$x##5604][VV##5473:=lq_anf$##7205759403792827643##d8R5][VV##5484:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5496:=lq_tmp$x##5604][lq_tmp$x##5497:=lq_anf$##7205759403792827643##d8R5][lq_tmp$x##5503:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5506:=lq_tmp$x##5604][lq_tmp$x##5507:=lq_anf$##7205759403792827643##d8R5][lq_tmp$x##5513:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5540:=lq_tmp$x##5604][lq_tmp$x##5541:=lq_anf$##7205759403792827643##d8R5][lq_tmp$x##5543:=lq_tmp$x##5604][lq_tmp$x##5544:=lq_anf$##7205759403792827643##d8R5][lq_tmp$x##5553:=lq_anf$##7205759403792827651##d8Rd][lq_tmp$x##5554:=lq_anf$##7205759403792827652##d8Re][lq_tmp$x##5555:=lq_anf$##7205759403792827653##d8Rf]}) | $k_##5474[VV##5473:=lq_tmp$x##5605][VV##5484:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5497:=lq_tmp$x##5605][lq_tmp$x##5503:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5507:=lq_tmp$x##5605][lq_tmp$x##5513:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5541:=lq_tmp$x##5605][lq_tmp$x##5544:=lq_tmp$x##5605]\nlq_tmp$x##5605 == o##a5NK\nlq_tmp$x##5605 == Data.Vector.Storable.Vector lq_anf$##7205759403792827651##d8Rd lq_anf$##7205759403792827652##d8Re lq_anf$##7205759403792827653##d8Rf\nlq_tmp$x##5605 == Data.Vector.Storable.Vector lq_anf$##7205759403792827651##d8Rd lq_anf$##7205759403792827652##d8Re lq_anf$##7205759403792827653##d8Rf\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                && lq_tmp$x##5605 == Data.Vector.Storable.Vector lq_anf$##7205759403792827651##d8Rd lq_anf$##7205759403792827652##d8Re lq_anf$##7205759403792827653##d8Rf\nlq_tmp$x##5605 == lq_anf$##7205759403792827643##d8R5}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":28,"startCol":25,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##5057:a -> a"]]],[{"spanInfo":{"startLine":118,"endLine":118,"endCol":16,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827712","{lq_tmp$x##7937 : a | lq_tmp$x##7937 == lq_anf$##7205759403792827711##d8Sb\n                      && lq_tmp$x##7937 == GHC.Num.fromInteger lq_anf$##7205759403792827711##d8Sb}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":26,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","lq_tmp$x##5327:a -> a"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":30,"startCol":23,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["hiddens","[GHC.Types.Int]"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":7,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.output","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Numeric<[]> a, Foreign.Storable.Storable<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a)) =>\nlq_tmp$x##4031:(Neuro.Network a) -> lq_tmp$x##4032:(lq_tmp$x##4026:a -> a) -> lq_tmp$x##4033:(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":70,"startCol":67,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##7369:a -> a"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":39,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall r a b .\n      lq_tmp$x##4208:(lq_tmp$x##4207:a -> b) -> lq_tmp$x##4209:a -> b | VV == GHC.Base.$}"]]],[{"spanInfo":{"startLine":118,"endLine":118,"endCol":20,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["s","{lq_tmp$x##7971 : a | lq_tmp$x##7971 == GHC.Float.tanh x##a5XS\n                      && lq_tmp$x##7971 == GHC.Float.tanh x##a5XS\n                      && lq_tmp$x##7971 == s##a5XT}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":31,"startCol":30,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":19,"startCol":16,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":61,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","{lq_tmp$x##8300 : (Neuro.Network a) | lq_tmp$x##8300 == net##a5XW}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":63,"startCol":53,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827639","{lq_tmp$x##5196 : [{lq_tmp$x##5209 : (Data.Vector.Storable.Vector {lq_tmp$x##5208 : a | $k_##5205[VV##5204:=lq_tmp$x##5208][VV##5206:=lq_tmp$x##5209][lq_tmp$x##5200:=input##a5Ny][lq_tmp$x##5201:=lq_anf$##7205759403792827638##d8R0]}) | $k_##5207[VV##5206:=lq_tmp$x##5209][lq_tmp$x##5200:=input##a5Ny][lq_tmp$x##5201:=lq_anf$##7205759403792827638##d8R0]}]<\\lq_tmp$x##5203 VV -> {lq_tmp$x##5209 : (Data.Vector.Storable.Vector {lq_tmp$x##5208 : a | $k_##5211[VV##5210:=lq_tmp$x##5208][VV##5212:=lq_tmp$x##5209][lq_tmp$x##5200:=input##a5Ny][lq_tmp$x##5201:=lq_anf$##7205759403792827638##d8R0][lq_tmp$x##5214:=lq_tmp$x##5203]}) | $k_##5213[VV##5212:=lq_tmp$x##5209][lq_tmp$x##5200:=input##a5Ny][lq_tmp$x##5201:=lq_anf$##7205759403792827638##d8R0][lq_tmp$x##5214:=lq_tmp$x##5203]}> | tail lq_tmp$x##5196 == lq_anf$##7205759403792827638##d8R0\nhead lq_tmp$x##5196 == input##a5Ny\nlqdc##$select##GHC.Types.:##2 lq_tmp$x##5196 == lq_anf$##7205759403792827638##d8R0\nlqdc##$select##GHC.Types.:##1 lq_tmp$x##5196 == input##a5Ny\nis$GHC.Types.: lq_tmp$x##5196 <=> true)\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         && (is$GHC.Types.[] lq_tmp$x##5196 <=> false)\nlen lq_tmp$x##5196 == 1 + len lq_anf$##7205759403792827638##d8R0\nlq_tmp$x##5196 == GHC.Types.: input##a5Ny lq_anf$##7205759403792827638##d8R0\nlq_tmp$x##5196 == GHC.Types.: input##a5Ny lq_anf$##7205759403792827638##d8R0}"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":41,"startCol":40,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{lq_tmp$x##5626 : (Internal.Matrix.Matrix {lq_tmp$x##5625 : a | $k_##5476[VV##5475:=lq_tmp$x##5625][VV##5477:=lq_tmp$x##5626][VV##5484:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5498:=lq_tmp$x##5625][lq_tmp$x##5499:=lq_tmp$x##5626][lq_tmp$x##5503:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5508:=lq_tmp$x##5625][lq_tmp$x##5509:=lq_tmp$x##5626][lq_tmp$x##5511:=lq_tmp$x##5625][lq_tmp$x##5512:=lq_tmp$x##5626][lq_tmp$x##5513:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5524:=o##a5NK]\n                                                                && $k_##5481[VV##5480:=lq_tmp$x##5625][VV##5482:=lq_tmp$x##5626][VV##5484:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5479:=o##a5NK][lq_tmp$x##5500:=o##a5NK][lq_tmp$x##5501:=lq_tmp$x##5625][lq_tmp$x##5502:=lq_tmp$x##5626][lq_tmp$x##5503:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5504:=o##a5NK][lq_tmp$x##5508:=lq_tmp$x##5625][lq_tmp$x##5509:=lq_tmp$x##5626][lq_tmp$x##5510:=o##a5NK][lq_tmp$x##5511:=lq_tmp$x##5625][lq_tmp$x##5512:=lq_tmp$x##5626][lq_tmp$x##5513:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5514:=o##a5NK][lq_tmp$x##5524:=o##a5NK]}) | $k_##5478[VV##5477:=lq_tmp$x##5626][VV##5484:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5499:=lq_tmp$x##5626][lq_tmp$x##5503:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5509:=lq_tmp$x##5626][lq_tmp$x##5513:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5524:=o##a5NK]\nk_##5483[VV##5482:=lq_tmp$x##5626][VV##5484:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5479:=o##a5NK][lq_tmp$x##5500:=o##a5NK][lq_tmp$x##5502:=lq_tmp$x##5626][lq_tmp$x##5503:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5504:=o##a5NK][lq_tmp$x##5509:=lq_tmp$x##5626][lq_tmp$x##5510:=o##a5NK][lq_tmp$x##5512:=lq_tmp$x##5626][lq_tmp$x##5513:=lq_anf$##7205759403792827642##d8R4][lq_tmp$x##5514:=o##a5NK][lq_tmp$x##5524:=o##a5NK]\nlq_tmp$x##5626 == m##a5NL}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.$trModule","{VV##8341 : GHC.Types.Module | $k_##8342}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":11,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","lq_tmp$x##3021:{VV##2979 : (System.Random.MWC.Gen {VV##2977 : (Control.Monad.Primitive.PrimState {VV##2975 : m | $k_##2976}) | $k_##2978}) | $k_##2980} -> lq_tmp$x##3022:{VV##3000 : [{VV##2988 : ({VV##2981 : GHC.Types.Int | $k_##2982[ds_d8IR:=lq_tmp$x##3021]}, {VV##2983 : GHC.Types.Int | $k_##2984[ds_d8IR:=lq_tmp$x##3021]})<\\lq_tmp$x##3024 VV -> {VV##2986 : GHC.Types.Int | $k_##2987[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2985:=lq_tmp$x##3024][lq_tmp$x##3018:=lq_tmp$x##3024]}> | $k_##2989[ds_d8IR:=lq_tmp$x##3021]}]<\\lq_tmp$x##3026 VV -> {VV##2998 : ({VV##2991 : GHC.Types.Int | $k_##2992[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2990:=lq_tmp$x##3026][lq_tmp$x##3020:=lq_tmp$x##3026]}, {VV##2993 : GHC.Types.Int | $k_##2994[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2990:=lq_tmp$x##3026][lq_tmp$x##3020:=lq_tmp$x##3026]})<\\lq_tmp$x##3025 VV -> {VV##2996 : GHC.Types.Int | $k_##2997[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2990:=lq_tmp$x##3026][lq_tmp$x##2995:=lq_tmp$x##3025][lq_tmp$x##3019:=lq_tmp$x##3025][lq_tmp$x##3020:=lq_tmp$x##3026]}> | $k_##2999[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2990:=lq_tmp$x##3026][lq_tmp$x##3020:=lq_tmp$x##3026]}> | $k_##3001[ds_d8IR:=lq_tmp$x##3021]} -> lq_tmp$x##3023:{VV##3006 : (Data.Vector.Vector {VV##3004 : (Internal.Matrix.Matrix {VV##3002 : t | $k_##3003[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022]}) | $k_##3005[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022]}) | $k_##3007[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022]} -> {VV##3016 : {VV##3008 : m | $k_##3009[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]} {VV##3014 : (Data.Vector.Vector {VV##3012 : (Internal.Matrix.Matrix {VV##3010 : t | $k_##3011[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]}) | $k_##3013[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]}) | $k_##3015[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]} | $k_##3017[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":82,"startCol":76,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827621","lq_tmp$x##4619:(Data.Vector.Storable.Vector a) -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":15,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["inp","{VV##4101 : (Data.Vector.Storable.Vector {VV##4099 : a | $k_##4100}) | $k_##4102}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":32,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827524","lq_tmp$x##1889:{lq_tmp$x##1921 : [{lq_tmp$x##1917 : (Internal.Matrix.Matrix {lq_tmp$x##1916 : a | $k_##1906[VV##1905:=lq_tmp$x##1916][VV##1907:=lq_tmp$x##1917][VV##1914:=lq_tmp$x##1921][lq_tmp$x##1887:=lq_anf$##7205759403792827522##d8P8][lq_tmp$x##1888:=lq_anf$##7205759403792827523##d8P9]}) | $k_##1908[VV##1907:=lq_tmp$x##1917][VV##1914:=lq_tmp$x##1921][lq_tmp$x##1887:=lq_anf$##7205759403792827522##d8P8][lq_tmp$x##1888:=lq_anf$##7205759403792827523##d8P9]}]<\\lq_tmp$x##1918 VV -> {lq_tmp$x##1920 : (Internal.Matrix.Matrix {lq_tmp$x##1919 : a | $k_##1911[VV##1910:=lq_tmp$x##1919][VV##1912:=lq_tmp$x##1920][VV##1914:=lq_tmp$x##1921][lq_tmp$x##1887:=lq_anf$##7205759403792827522##d8P8][lq_tmp$x##1888:=lq_anf$##7205759403792827523##d8P9][lq_tmp$x##1909:=lq_tmp$x##1918]}) | $k_##1913[VV##1912:=lq_tmp$x##1920][VV##1914:=lq_tmp$x##1921][lq_tmp$x##1887:=lq_anf$##7205759403792827522##d8P8][lq_tmp$x##1888:=lq_anf$##7205759403792827523##d8P9][lq_tmp$x##1909:=lq_tmp$x##1918]}> | $k_##1915[VV##1914:=lq_tmp$x##1921][lq_tmp$x##1887:=lq_anf$##7205759403792827522##d8P8][lq_tmp$x##1888:=lq_anf$##7205759403792827523##d8P9]} -> {lq_tmp$x##1904 : (Neuro.Network {lq_tmp$x##1903 : a | $k_##1900[VV##1899:=lq_tmp$x##1903][VV##1901:=lq_tmp$x##1904][lq_tmp$x##1887:=lq_anf$##7205759403792827522##d8P8][lq_tmp$x##1888:=lq_anf$##7205759403792827523##d8P9]}) | $k_##1902[VV##1901:=lq_tmp$x##1904][lq_tmp$x##1887:=lq_anf$##7205759403792827522##d8P8][lq_tmp$x##1888:=lq_anf$##7205759403792827523##d8P9]\nlq_tmp$x##1904 == GHC.Base.. lq_anf$##7205759403792827522##d8P8 lq_anf$##7205759403792827523##d8P9 lq_tmp$x##1889\nlq_tmp$x##1904 == lq_anf$##7205759403792827522##d8P8 (lq_anf$##7205759403792827523##d8P9 lq_tmp$x##1889)}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":28,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827630","lq_tmp$x##5045:(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":39,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827604","{lq_tmp$x##4114 : (Data.Vector.Storable.Vector {lq_tmp$x##4113 : a | $k_##4100[VV##4099:=lq_tmp$x##4113][VV##4101:=lq_tmp$x##4114]}) | $k_##4102[VV##4101:=lq_tmp$x##4114]\n                                                                                                                                       && lq_tmp$x##4114 == inp##a5ME}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":29,"startCol":25,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","lq_tmp$x##6100:a -> a"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":113,"startCol":112,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827626","{lq_tmp$x##4749 : GHC.Types.Double | lq_tmp$x##4749 == 0.0\n                                     && lq_tmp$x##4749 == GHC.Types.D# 0.0}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":54,"startCol":49,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827705","{lq_tmp$x##7417 : GHC.Types.Int | lq_tmp$x##7417 == lq_anf$##7205759403792827700##d8S0 + lq_anf$##7205759403792827704##d8S4\n                                  && lq_tmp$x##7417 == GHC.Num.+ lq_anf$##7205759403792827700##d8S0 lq_anf$##7205759403792827704##d8S4}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":53,"startCol":43,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827559","{lq_tmp$x##2487 : [{lq_tmp$x##2497 : GHC.Types.Int | $k_##2496[VV##2495:=lq_tmp$x##2497][lq_tmp$x##2491:=nOutputs##a5L4][lq_tmp$x##2492:=lq_anf$##7205759403792827558##d8PI]}]<\\lq_tmp$x##2494 VV -> {lq_tmp$x##2497 : GHC.Types.Int | $k_##2499[VV##2498:=lq_tmp$x##2497][lq_tmp$x##2491:=nOutputs##a5L4][lq_tmp$x##2492:=lq_anf$##7205759403792827558##d8PI][lq_tmp$x##2500:=lq_tmp$x##2494]}> | tail lq_tmp$x##2487 == lq_anf$##7205759403792827558##d8PI\n                                                                                                                                                                                                                                                                                                                                                                                                   && head lq_tmp$x##2487 == nOutputs##a5L4\n                                                                                                                                                                                                                                                                                                                                                                                                   && lqdc##$select##GHC.Types.:##2 lq_tmp$x##2487 == lq_anf$##7205759403792827558##d8PI\n                                                                                                                                                                                                                                                                                                                                                                                                   && lqdc##$select##GHC.Types.:##1 lq_tmp$x##2487 == nOutputs##a5L4\n                                                                                                                                                                                                                                                                                                                                                                                                   && (is$GHC.Types.: lq_tmp$x##2487 <=> true)\n                                                                                                                                                                                                                                                                                                                                                                                                   && (is$GHC.Types.[] lq_tmp$x##2487 <=> false)\n                                                                                                                                                                                                                                                                                                                                                                                                   && len lq_tmp$x##2487 == 1 + len lq_anf$##7205759403792827558##d8PI\n                                                                                                                                                                                                                                                                                                                                                                                                   && lq_tmp$x##2487 == GHC.Types.: nOutputs##a5L4 lq_anf$##7205759403792827558##d8PI\n                                                                                                                                                                                                                                                                                                                                                                                                   && lq_tmp$x##2487 == GHC.Types.: nOutputs##a5L4 lq_anf$##7205759403792827558##d8PI}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":78,"startCol":77,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{lq_tmp$x##7027 : (Neuro.Network a) | lq_tmp$x##7027 == n##a5O0}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":20,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ds","{lq_tmp$x##3414 : [{lq_tmp$x##3407 : ({lq_tmp$x##3403 : GHC.Types.Int | $k_##2982[VV##2981:=lq_tmp$x##3403][VV##2988:=lq_tmp$x##3407][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3031:=lq_tmp$x##3403][lq_tmp$x##3035:=lq_tmp$x##3407][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3130:=lq_tmp$x##3403][lq_tmp$x##3134:=lq_tmp$x##3407][lq_tmp$x##3136:=lq_tmp$x##3403][lq_tmp$x##3137:=lq_tmp$x##3131][lq_tmp$x##3139:=lq_tmp$x##3133][lq_tmp$x##3140:=lq_tmp$x##3407][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3165:=lq_tmp$x##3414]\n                                                                        && $k_##2992[VV##2991:=lq_tmp$x##3403][VV##2998:=lq_tmp$x##3407][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2990:=ds_d8LZ][lq_tmp$x##3020:=ds_d8LZ][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3026:=ds_d8LZ][lq_tmp$x##3036:=ds_d8LZ][lq_tmp$x##3037:=lq_tmp$x##3403][lq_tmp$x##3041:=lq_tmp$x##3407][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3045:=ds_d8LZ][lq_tmp$x##3130:=lq_tmp$x##3403][lq_tmp$x##3134:=lq_tmp$x##3407][lq_tmp$x##3135:=ds_d8LZ][lq_tmp$x##3136:=lq_tmp$x##3403][lq_tmp$x##3137:=lq_tmp$x##3131][lq_tmp$x##3139:=lq_tmp$x##3133][lq_tmp$x##3140:=lq_tmp$x##3407][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3144:=ds_d8LZ][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3165:=lq_tmp$x##3414]}, {lq_tmp$x##3404 : GHC.Types.Int | $k_##2984[VV##2983:=lq_tmp$x##3404][VV##2988:=lq_tmp$x##3407][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3032:=lq_tmp$x##3404][lq_tmp$x##3035:=lq_tmp$x##3407][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3131:=lq_tmp$x##3404][lq_tmp$x##3134:=lq_tmp$x##3407][lq_tmp$x##3136:=lq_tmp$x##3130][lq_tmp$x##3137:=lq_tmp$x##3404][lq_tmp$x##3139:=lq_tmp$x##3133][lq_tmp$x##3140:=lq_tmp$x##3407][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3165:=lq_tmp$x##3414]\nk_##2994[VV##2993:=lq_tmp$x##3404][VV##2998:=lq_tmp$x##3407][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2990:=ds_d8LZ][lq_tmp$x##3020:=ds_d8LZ][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3026:=ds_d8LZ][lq_tmp$x##3036:=ds_d8LZ][lq_tmp$x##3038:=lq_tmp$x##3404][lq_tmp$x##3041:=lq_tmp$x##3407][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3045:=ds_d8LZ][lq_tmp$x##3131:=lq_tmp$x##3404][lq_tmp$x##3134:=lq_tmp$x##3407][lq_tmp$x##3135:=ds_d8LZ][lq_tmp$x##3136:=lq_tmp$x##3130][lq_tmp$x##3137:=lq_tmp$x##3404][lq_tmp$x##3139:=lq_tmp$x##3133][lq_tmp$x##3140:=lq_tmp$x##3407][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3144:=ds_d8LZ][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3165:=lq_tmp$x##3414]})<\\lq_tmp$x##3415 VV -> {lq_tmp$x##3406 : GHC.Types.Int | $k_##2987[VV##2986:=lq_tmp$x##3406][VV##2988:=lq_tmp$x##3407][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2985:=lq_tmp$x##3415][lq_tmp$x##3018:=lq_tmp$x##3415][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3024:=lq_tmp$x##3415][lq_tmp$x##3033:=lq_tmp$x##3415][lq_tmp$x##3034:=lq_tmp$x##3406][lq_tmp$x##3035:=lq_tmp$x##3407][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3043:=lq_tmp$x##3415][lq_tmp$x##3132:=lq_tmp$x##3415][lq_tmp$x##3133:=lq_tmp$x##3406][lq_tmp$x##3134:=lq_tmp$x##3407][lq_tmp$x##3136:=lq_tmp$x##3130][lq_tmp$x##3137:=lq_tmp$x##3131][lq_tmp$x##3139:=lq_tmp$x##3406][lq_tmp$x##3140:=lq_tmp$x##3407][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3142:=lq_tmp$x##3415][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3165:=lq_tmp$x##3414][lq_tmp$x##3405:=lq_tmp$x##3415]\nk_##2997[VV##2996:=lq_tmp$x##3406][VV##2998:=lq_tmp$x##3407][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2990:=ds_d8LZ][lq_tmp$x##2995:=lq_tmp$x##3143][lq_tmp$x##3019:=lq_tmp$x##3143][lq_tmp$x##3020:=ds_d8LZ][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3025:=lq_tmp$x##3143][lq_tmp$x##3026:=ds_d8LZ][lq_tmp$x##3036:=ds_d8LZ][lq_tmp$x##3039:=lq_tmp$x##3143][lq_tmp$x##3040:=lq_tmp$x##3406][lq_tmp$x##3041:=lq_tmp$x##3407][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3044:=lq_tmp$x##3143][lq_tmp$x##3045:=ds_d8LZ][lq_tmp$x##3133:=lq_tmp$x##3406][lq_tmp$x##3134:=lq_tmp$x##3407][lq_tmp$x##3135:=ds_d8LZ][lq_tmp$x##3136:=lq_tmp$x##3130][lq_tmp$x##3137:=lq_tmp$x##3131][lq_tmp$x##3138:=lq_tmp$x##3143][lq_tmp$x##3139:=lq_tmp$x##3406][lq_tmp$x##3140:=lq_tmp$x##3407][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3142:=lq_tmp$x##3415][lq_tmp$x##3144:=ds_d8LZ][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3165:=lq_tmp$x##3414][lq_tmp$x##3405:=lq_tmp$x##3415]}> | $k_##2989[VV##2988:=lq_tmp$x##3407][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3035:=lq_tmp$x##3407][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3134:=lq_tmp$x##3407][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3165:=lq_tmp$x##3414]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        && $k_##2999[VV##2998:=lq_tmp$x##3407][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2990:=ds_d8LZ][lq_tmp$x##3020:=ds_d8LZ][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3026:=ds_d8LZ][lq_tmp$x##3036:=ds_d8LZ][lq_tmp$x##3041:=lq_tmp$x##3407][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3045:=ds_d8LZ][lq_tmp$x##3134:=lq_tmp$x##3407][lq_tmp$x##3135:=ds_d8LZ][lq_tmp$x##3140:=lq_tmp$x##3407][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3144:=ds_d8LZ][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3165:=lq_tmp$x##3414]}]<\\lq_tmp$x##3417 VV -> {lq_tmp$x##3413 : ({lq_tmp$x##3409 : GHC.Types.Int | $k_##2992[VV##2991:=lq_tmp$x##3409][VV##2998:=lq_tmp$x##3413][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2990:=lq_tmp$x##3417][lq_tmp$x##3020:=lq_tmp$x##3417][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3026:=lq_tmp$x##3417][lq_tmp$x##3036:=lq_tmp$x##3417][lq_tmp$x##3037:=lq_tmp$x##3409][lq_tmp$x##3041:=lq_tmp$x##3413][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3045:=lq_tmp$x##3417][lq_tmp$x##3130:=lq_tmp$x##3409][lq_tmp$x##3134:=lq_tmp$x##3413][lq_tmp$x##3135:=lq_tmp$x##3417][lq_tmp$x##3136:=lq_tmp$x##3409][lq_tmp$x##3137:=lq_tmp$x##3131][lq_tmp$x##3139:=lq_tmp$x##3133][lq_tmp$x##3140:=lq_tmp$x##3413][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3144:=lq_tmp$x##3417][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3163:=lq_tmp$x##3417][lq_tmp$x##3165:=lq_tmp$x##3414][lq_tmp$x##3408:=lq_tmp$x##3417]}, {lq_tmp$x##3410 : GHC.Types.Int | $k_##2994[VV##2993:=lq_tmp$x##3410][VV##2998:=lq_tmp$x##3413][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2990:=lq_tmp$x##3417][lq_tmp$x##3020:=lq_tmp$x##3417][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3026:=lq_tmp$x##3417][lq_tmp$x##3036:=lq_tmp$x##3417][lq_tmp$x##3038:=lq_tmp$x##3410][lq_tmp$x##3041:=lq_tmp$x##3413][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3045:=lq_tmp$x##3417][lq_tmp$x##3131:=lq_tmp$x##3410][lq_tmp$x##3134:=lq_tmp$x##3413][lq_tmp$x##3135:=lq_tmp$x##3417][lq_tmp$x##3136:=lq_tmp$x##3130][lq_tmp$x##3137:=lq_tmp$x##3410][lq_tmp$x##3139:=lq_tmp$x##3133][lq_tmp$x##3140:=lq_tmp$x##3413][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3144:=lq_tmp$x##3417][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3163:=lq_tmp$x##3417][lq_tmp$x##3165:=lq_tmp$x##3414][lq_tmp$x##3408:=lq_tmp$x##3417]})<\\lq_tmp$x##3416 VV -> {lq_tmp$x##3412 : GHC.Types.Int | $k_##2997[VV##2996:=lq_tmp$x##3412][VV##2998:=lq_tmp$x##3413][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2990:=lq_tmp$x##3417][lq_tmp$x##2995:=lq_tmp$x##3143][lq_tmp$x##3019:=lq_tmp$x##3143][lq_tmp$x##3020:=lq_tmp$x##3417][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3025:=lq_tmp$x##3143][lq_tmp$x##3026:=lq_tmp$x##3417][lq_tmp$x##3036:=lq_tmp$x##3417][lq_tmp$x##3039:=lq_tmp$x##3143][lq_tmp$x##3040:=lq_tmp$x##3412][lq_tmp$x##3041:=lq_tmp$x##3413][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3044:=lq_tmp$x##3143][lq_tmp$x##3045:=lq_tmp$x##3417][lq_tmp$x##3133:=lq_tmp$x##3412][lq_tmp$x##3134:=lq_tmp$x##3413][lq_tmp$x##3135:=lq_tmp$x##3417][lq_tmp$x##3136:=lq_tmp$x##3130][lq_tmp$x##3137:=lq_tmp$x##3131][lq_tmp$x##3138:=lq_tmp$x##3143][lq_tmp$x##3139:=lq_tmp$x##3412][lq_tmp$x##3140:=lq_tmp$x##3413][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3142:=lq_tmp$x##3416][lq_tmp$x##3144:=lq_tmp$x##3417][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3163:=lq_tmp$x##3417][lq_tmp$x##3165:=lq_tmp$x##3414][lq_tmp$x##3408:=lq_tmp$x##3417][lq_tmp$x##3411:=lq_tmp$x##3416]}> | $k_##2999[VV##2998:=lq_tmp$x##3413][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2990:=lq_tmp$x##3417][lq_tmp$x##3020:=lq_tmp$x##3417][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3026:=lq_tmp$x##3417][lq_tmp$x##3036:=lq_tmp$x##3417][lq_tmp$x##3041:=lq_tmp$x##3413][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3045:=lq_tmp$x##3417][lq_tmp$x##3134:=lq_tmp$x##3413][lq_tmp$x##3135:=lq_tmp$x##3417][lq_tmp$x##3140:=lq_tmp$x##3413][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3144:=lq_tmp$x##3417][lq_tmp$x##3157:=ds_d8LZ][lq_tmp$x##3163:=lq_tmp$x##3417][lq_tmp$x##3165:=lq_tmp$x##3414][lq_tmp$x##3408:=lq_tmp$x##3417]}> | len lq_tmp$x##3414 >= 0\nlq_tmp$x##3414 == ds##a5Lc}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":73,"startCol":34,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827616","{VV : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | VV ~~ ds_d8DG}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":59,"startCol":51,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","lq_tmp$x##7197:{VV##7189 : (Neuro.Network {VV##7187 : a | $k_##7188}) | $k_##7190} -> lq_tmp$x##7198:{VV##7191 : GHC.Types.Int | $k_##7192[n##a5KZ:=lq_tmp$x##7197]} -> {VV##7195 : (Neuro.Network {VV##7193 : a | $k_##7194[k##a5L0:=lq_tmp$x##7198][n##a5KZ:=lq_tmp$x##7197]}) | $k_##7196[k##a5L0:=lq_tmp$x##7198][n##a5KZ:=lq_tmp$x##7197]}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":61,"startCol":51,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827723","{lq_tmp$x##8289 : Data.ByteString.Lazy.Internal.ByteString | lq_tmp$x##8289 == Data.Binary.encode net##a5XW}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":24,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ms","{lq_tmp$x##3361 : (Data.Vector.Vector {lq_tmp$x##3360 : (Internal.Matrix.Matrix {lq_tmp$x##3359 : t | $k_##3003[VV##3002:=lq_tmp$x##3359][VV##3004:=lq_tmp$x##3360][VV##3006:=lq_tmp$x##3361][ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS]}) | $k_##3005[VV##3004:=lq_tmp$x##3360][VV##3006:=lq_tmp$x##3361][ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS]}) | $k_##3007[VV##3006:=lq_tmp$x##3361][ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                && 0 <= vlen lq_tmp$x##3361\n                                                                                                                                                                                                                                                                                                                                                                                                                                                && lq_tmp$x##3361 == ms##a5L8}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":33,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827676","{lq_tmp$x##6451 : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | lq_tmp$x##6451 == Neuro.outputs n##a5NQ act##a5NO input##a5NS\n                                                                         && lq_tmp$x##6451 == Neuro.outputs n##a5NQ act##a5NO input##a5NS\n                                                                         && 0 <= vlen lq_tmp$x##6451\n                                                                         && lq_tmp$x##6451 == lq_anf$##7205759403792827675##d8RB\n                                                                         && 0 <= vlen lq_tmp$x##6451\n                                                                         && lq_tmp$x##6451 == Data.Vector.Vector lq_anf$##7205759403792827693##d8RT lq_anf$##7205759403792827694##d8RU lq_anf$##7205759403792827695##d8RV\n                                                                         && lq_tmp$x##6451 == Data.Vector.Vector lq_anf$##7205759403792827693##d8RT lq_anf$##7205759403792827694##d8RU lq_anf$##7205759403792827695##d8RV\n                                                                         && lq_tmp$x##6451 == Data.Vector.Vector lq_anf$##7205759403792827693##d8RT lq_anf$##7205759403792827694##d8RU lq_anf$##7205759403792827695##d8RV\n                                                                         && 0 <= vlen lq_tmp$x##6451\n                                                                         && lq_tmp$x##6451 == lq_anf$##7205759403792827676##d8RC}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":37,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827528","lq_tmp$x##2155:{lq_tmp$x##2187 : (Data.Vector.Vector {lq_tmp$x##2186 : (Internal.Matrix.Matrix {lq_tmp$x##2185 : a | $k_##2180[VV##2179:=lq_tmp$x##2185][VV##2181:=lq_tmp$x##2186][VV##2183:=lq_tmp$x##2187][lq_tmp$x##2153:=lq_anf$##7205759403792827526##d8Pc][lq_tmp$x##2154:=lq_anf$##7205759403792827527##d8Pd]}) | $k_##2182[VV##2181:=lq_tmp$x##2186][VV##2183:=lq_tmp$x##2187][lq_tmp$x##2153:=lq_anf$##7205759403792827526##d8Pc][lq_tmp$x##2154:=lq_anf$##7205759403792827527##d8Pd]}) | $k_##2184[VV##2183:=lq_tmp$x##2187][lq_tmp$x##2153:=lq_anf$##7205759403792827526##d8Pc][lq_tmp$x##2154:=lq_anf$##7205759403792827527##d8Pd]} -> {lq_tmp$x##2178 : (Data.Binary.Put.PutM {lq_tmp$x##2177 : () | $k_##2174[VV##2173:=lq_tmp$x##2177][VV##2175:=lq_tmp$x##2178][lq_tmp$x##2153:=lq_anf$##7205759403792827526##d8Pc][lq_tmp$x##2154:=lq_anf$##7205759403792827527##d8Pd]}) | $k_##2176[VV##2175:=lq_tmp$x##2178][lq_tmp$x##2153:=lq_anf$##7205759403792827526##d8Pc][lq_tmp$x##2154:=lq_anf$##7205759403792827527##d8Pd]\nlq_tmp$x##2178 == GHC.Base.. lq_anf$##7205759403792827526##d8Pc lq_anf$##7205759403792827527##d8Pd lq_tmp$x##2155\nlq_tmp$x##2178 == lq_anf$##7205759403792827526##d8Pc (lq_anf$##7205759403792827527##d8Pd lq_tmp$x##2155)}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":66,"startCol":54,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["learningRate","{lq_tmp$x##7365 : a | lq_tmp$x##7365 == learningRate##a5KT}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":83,"startCol":71,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827666","{lq_tmp$x##5989 : (Data.Vector.Vector {lq_tmp$x##5997 : (Data.Vector.Storable.Vector {lq_tmp$x##5996 : a | $k_##5993[VV##5992:=lq_tmp$x##5996][VV##5994:=lq_tmp$x##5997][lq_tmp$x##5991:=os##a5NE]}) | $k_##5995[VV##5994:=lq_tmp$x##5997][lq_tmp$x##5991:=os##a5NE]}) | lq_tmp$x##5989 == Data.Vector.init os##a5NE}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":77,"startCol":76,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{lq_tmp$x##7375 : (Neuro.Network {lq_tmp$x##7374 : a | $k_##7188[VV##7187:=lq_tmp$x##7374][VV##7189:=lq_tmp$x##7375]}) | $k_##7190[VV##7189:=lq_tmp$x##7375]\n                                                                                                                         && lq_tmp$x##7375 == n##a5KZ}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":24,"startCol":21,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##6099:a -> a"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":33,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827645","{lq_tmp$x##5601 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5601 == deriv##a5NJ lq_anf$##7205759403792827643##d8R5}"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":49,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$dNum_a7R6","{lq_tmp$x##5665 : (GHC.Num.Num (Data.Vector.Storable.Vector a)) | lq_tmp$x##5665 == GHC.Real.$p1Fractional\n                                                                  && lq_tmp$x##5665 == GHC.Real.$p1Fractional\n                                                                  && lq_tmp$x##5665 == $dNum_a7R6}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":14,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.createNetwork","forall a .\n(System.Random.MWC.Variate<[]> a, Foreign.Storable.Storable<[]> a) =>\nlq_tmp$x##2457:GHC.Types.Int -> lq_tmp$x##2458:[GHC.Types.Int] -> lq_tmp$x##2459:GHC.Types.Int -> (GHC.Types.IO (Neuro.Network a))"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":45,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827681","{lq_tmp$x##6530 : (Data.Vector.Vector {lq_tmp$x##6547 : (Internal.Matrix.Matrix {lq_tmp$x##6546 : a | $k_##6543[VV##6542:=lq_tmp$x##6546][VV##6544:=lq_tmp$x##6547][lq_tmp$x##6534:=lq_anf$##7205759403792827680##d8RG][lq_tmp$x##6535:=lq_anf$##7205759403792827678##d8RE]}) | $k_##6545[VV##6544:=lq_tmp$x##6547][lq_tmp$x##6534:=lq_anf$##7205759403792827680##d8RG][lq_tmp$x##6535:=lq_anf$##7205759403792827678##d8RE]}) | vlen lq_tmp$x##6530 == vlen lq_anf$##7205759403792827678##d8RE\n                                                                                                                                                                                                                                                                                                                                                                                                                                && lq_tmp$x##6530 == Data.Vector.map lq_anf$##7205759403792827680##d8RG lq_anf$##7205759403792827678##d8RE}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":17,"startCol":16,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{VV##4987 : (Internal.Matrix.Matrix {VV##4985 : a | $k_##4986}) | $k_##4988}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":18,"startCol":14,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["rate","a"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":17,"startCol":14,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ds_d8IR","{lq_tmp$x##3402 : (System.Random.MWC.Gen {lq_tmp$x##3401 : (Control.Monad.Primitive.PrimState {lq_tmp$x##3400 : m | $k_##2976[VV##2975:=lq_tmp$x##3400][VV##2977:=lq_tmp$x##3401][VV##2979:=lq_tmp$x##3402]}) | $k_##2978[VV##2977:=lq_tmp$x##3401][VV##2979:=lq_tmp$x##3402]}) | $k_##2980[VV##2979:=lq_tmp$x##3402]\n                                                                                                                                                                                                                                                                                  && lq_tmp$x##3402 == ds_d8IR}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":38,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827579","{lq_tmp$x##3363 : (Internal.Matrix.Matrix {lq_tmp$x##3362 : t | $k_##2747[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2746:=lq_tmp$x##3362][VV##2748:=lq_tmp$x##3363][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3252:=lq_tmp$x##3362][lq_tmp$x##3253:=lq_tmp$x##3363][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR][lq_tmp$x##3268:=lq_tmp$x##3362][lq_tmp$x##3291:=lq_tmp$x##3362][lq_tmp$x##3292:=lq_tmp$x##3363][lq_tmp$x##3294:=lq_tmp$x##3362][lq_tmp$x##3295:=lq_tmp$x##3363]\n                                                                && $k_##2747[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2746:=lq_tmp$x##3362][VV##2748:=lq_anf$##7205759403792827579##d8Q3][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3252:=lq_tmp$x##3362][lq_tmp$x##3253:=lq_anf$##7205759403792827579##d8Q3][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR][lq_tmp$x##3268:=lq_tmp$x##3362][lq_tmp$x##3291:=lq_tmp$x##3362][lq_tmp$x##3292:=lq_anf$##7205759403792827579##d8Q3][lq_tmp$x##3294:=lq_tmp$x##3362][lq_tmp$x##3295:=lq_anf$##7205759403792827579##d8Q3][lq_tmp$x##3312:=lq_anf$##7205759403792827581##d8Q5][lq_tmp$x##3313:=lq_anf$##7205759403792827582##d8Q6][lq_tmp$x##3314:=lq_anf$##7205759403792827583##d8Q7][lq_tmp$x##3315:=lq_anf$##7205759403792827584##d8Q8][lq_tmp$x##3316:=lq_anf$##7205759403792827585##d8Q9][lq_tmp$x##3317:=lq_anf$##7205759403792827586##d8Qa][lq_tmp$x##3318:=lq_anf$##7205759403792827587##d8Qb]}) | $k_##2749[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2748:=lq_tmp$x##3363][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3253:=lq_tmp$x##3363][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR][lq_tmp$x##3292:=lq_tmp$x##3363][lq_tmp$x##3295:=lq_tmp$x##3363]\nlq_tmp$x##3363 == mat##a5Le\nlq_tmp$x##3363 == Internal.Matrix.Matrix lq_anf$##7205759403792827581##d8Q5 lq_anf$##7205759403792827582##d8Q6 lq_anf$##7205759403792827583##d8Q7 lq_anf$##7205759403792827584##d8Q8 lq_anf$##7205759403792827585##d8Q9 lq_anf$##7205759403792827586##d8Qa lq_anf$##7205759403792827587##d8Qb\nlq_tmp$x##3363 == Internal.Matrix.Matrix lq_anf$##7205759403792827581##d8Q5 lq_anf$##7205759403792827582##d8Q6 lq_anf$##7205759403792827583##d8Q7 lq_anf$##7205759403792827584##d8Q8 lq_anf$##7205759403792827585##d8Q9 lq_anf$##7205759403792827586##d8Qa lq_anf$##7205759403792827587##d8Qb\nlq_tmp$x##3363 == Internal.Matrix.Matrix lq_anf$##7205759403792827581##d8Q5 lq_anf$##7205759403792827582##d8Q6 lq_anf$##7205759403792827583##d8Q7 lq_anf$##7205759403792827584##d8Q8 lq_anf$##7205759403792827585##d8Q9 lq_anf$##7205759403792827586##d8Qa lq_anf$##7205759403792827587##d8Qb\nlq_tmp$x##3363 == lq_anf$##7205759403792827579##d8Q3}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":10,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","inp##a5NA:{VV##4982 : (Data.Vector.Storable.Vector {VV##4980 : a | $k_##4981}) | $k_##4983} -> m##a5NB:{VV##4987 : (Internal.Matrix.Matrix {VV##4985 : a | $k_##4986}) | $k_##4988} -> {VV##4992 : (Data.Vector.Storable.Vector {VV##4990 : a | $k_##4991}) | $k_##4993}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":39,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","{lq_tmp$x##5836 : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen lq_tmp$x##5836\n                                                                         && lq_tmp$x##5836 == os##a5NE}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":53,"startCol":10,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.$fBinaryNetwork","forall a .\n(Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\n(Data.Binary.Class.Binary (Neuro.Network a))"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":49,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827662","{lq_tmp$x##5850 : (Data.Vector.Vector {lq_tmp$x##5887 : (Data.Vector.Storable.Vector {lq_tmp$x##5886 : a | $k_##5883[VV##5882:=lq_tmp$x##5886][VV##5884:=lq_tmp$x##5887][lq_tmp$x##5856:=f##a5NI][lq_tmp$x##5857:=lq_anf$##7205759403792827659##d8Rl][lq_tmp$x##5858:=lq_anf$##7205759403792827661##d8Rn]}) | $k_##5885[VV##5884:=lq_tmp$x##5887][lq_tmp$x##5856:=f##a5NI][lq_tmp$x##5857:=lq_anf$##7205759403792827659##d8Rl][lq_tmp$x##5858:=lq_anf$##7205759403792827661##d8Rn]}) | lq_tmp$x##5850 == Data.Vector.scanr f##a5NI lq_anf$##7205759403792827659##d8Rl lq_anf$##7205759403792827661##d8Rn}"]]],[{"spanInfo":{"startLine":76,"endLine":77,"endCol":52,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{lq_tmp$x##2698 : [{lq_tmp$x##2691 : ({lq_tmp$x##2687 : GHC.Types.Int | $k_##2667[VV##2666:=lq_tmp$x##2687][VV##2673:=lq_tmp$x##2691][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP]}, {lq_tmp$x##2688 : GHC.Types.Int | $k_##2669[VV##2668:=lq_tmp$x##2688][VV##2673:=lq_tmp$x##2691][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP]})<\\lq_tmp$x##2689 VV -> {lq_tmp$x##2690 : GHC.Types.Int | $k_##2672[VV##2671:=lq_tmp$x##2690][VV##2673:=lq_tmp$x##2691][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2670:=lq_tmp$x##2689]}> | $k_##2674[VV##2673:=lq_tmp$x##2691][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP]}]<\\lq_tmp$x##2692 VV -> {lq_tmp$x##2697 : ({lq_tmp$x##2693 : GHC.Types.Int | $k_##2677[VV##2676:=lq_tmp$x##2693][VV##2683:=lq_tmp$x##2697][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##2692]}, {lq_tmp$x##2694 : GHC.Types.Int | $k_##2679[VV##2678:=lq_tmp$x##2694][VV##2683:=lq_tmp$x##2697][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##2692]})<\\lq_tmp$x##2695 VV -> {lq_tmp$x##2696 : GHC.Types.Int | $k_##2682[VV##2681:=lq_tmp$x##2696][VV##2683:=lq_tmp$x##2697][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##2692][lq_tmp$x##2680:=lq_tmp$x##2695]}> | $k_##2684[VV##2683:=lq_tmp$x##2697][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##2692]}> | $k_##2686[VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP]\nlq_tmp$x##2698 == GHC.Base.$ lq_anf$##7205759403792827561##d8PL lq_anf$##7205759403792827565##d8PP}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":96,"startCol":93,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827684","lq_tmp$x##6608:(Internal.Matrix.Matrix a) -> lq_tmp$x##6609:(Internal.Matrix.Matrix a) -> {lq_tmp$x##6611 : (Internal.Matrix.Matrix a) | lq_tmp$x##6611 == lq_tmp$x##6608 + lq_tmp$x##6609}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":66,"startCol":62,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["rate","{lq_tmp$x##6944 : a | lq_tmp$x##6944 == rate##a5NX}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":32,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{lq_tmp$x##4196 : (Internal.Matrix.Matrix {lq_tmp$x##4195 : a | $k_##4105[VV##4104:=lq_tmp$x##4195][VV##4106:=lq_tmp$x##4196]}) | $k_##4107[VV##4106:=lq_tmp$x##4196]\n                                                                                                                                  && lq_tmp$x##4196 == m##a5MF}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":65,"startCol":51,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827720","{lq_tmp$x##8142 : (GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString) | lq_tmp$x##8142 == Data.ByteString.Lazy.readFile fp##a5XU}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":44,"startCol":37,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall s a .\n      lq_tmp$x##3572:(lq_tmp$x##3571:(System.Random.MWC.Gen (Control.Monad.Primitive.PrimState (GHC.ST.ST s))) -> (GHC.ST.ST s a)) -> lq_tmp$x##3573:(System.Random.MWC.Gen (Control.Monad.Primitive.PrimState (GHC.ST.ST s))) -> (GHC.ST.ST s a) | VV == System.Random.MWC.asGenST}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":26,"startCol":25,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{lq_tmp$x##6343 : (Neuro.Network a) | lq_tmp$x##6343 == n##a5NQ}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":20,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{VV##2732 : GHC.Types.Int | $k_##2733}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":44,"startCol":43,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{lq_tmp$x##7673 : GHC.Types.Int | lq_tmp$x##7673 == n##a504}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":14,"startCol":13,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":91,"endLine":95,"endCol":26,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827663","{lq_tmp$x##5921 : (Data.Vector.Vector {lq_tmp$x##5920 : (Data.Vector.Storable.Vector {lq_tmp$x##5919 : a | $k_##5883[VV##5882:=lq_tmp$x##5919][VV##5884:=lq_tmp$x##5920][lq_tmp$x##5850:=lq_tmp$x##5921][lq_tmp$x##5856:=f##a5NI][lq_tmp$x##5857:=lq_anf$##7205759403792827659##d8Rl][lq_tmp$x##5858:=lq_anf$##7205759403792827661##d8Rn][lq_tmp$x##5886:=lq_tmp$x##5919][lq_tmp$x##5887:=lq_tmp$x##5920]}) | $k_##5885[VV##5884:=lq_tmp$x##5920][lq_tmp$x##5850:=lq_tmp$x##5921][lq_tmp$x##5856:=f##a5NI][lq_tmp$x##5857:=lq_anf$##7205759403792827659##d8Rl][lq_tmp$x##5858:=lq_anf$##7205759403792827661##d8Rn][lq_tmp$x##5887:=lq_tmp$x##5920]}) | lq_tmp$x##5921 == Data.Vector.scanr f##a5NI lq_anf$##7205759403792827659##d8Rl lq_anf$##7205759403792827661##d8Rn\nlq_tmp$x##5921 == Data.Vector.scanr f##a5NI lq_anf$##7205759403792827659##d8Rl lq_anf$##7205759403792827661##d8Rn\nvlen lq_tmp$x##5921\nlq_tmp$x##5921 == lq_anf$##7205759403792827662##d8Ro}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":37,"startCol":28,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall a .\n      lq_tmp$x##2131:(Data.Vector.Vector a) -> [a] | VV == Data.Vector.toList}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":110,"startCol":82,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827686","{lq_tmp$x##6627 : (Data.Vector.Vector {lq_tmp$x##6653 : (Internal.Matrix.Matrix {lq_tmp$x##6652 : a | $k_##6649[VV##6648:=lq_tmp$x##6652][VV##6650:=lq_tmp$x##6653][lq_tmp$x##6633:=lq_anf$##7205759403792827684##d8RK][lq_tmp$x##6634:=lq_anf$##7205759403792827685##d8RL][lq_tmp$x##6635:=lq_anf$##7205759403792827682##d8RI]}) | $k_##6651[VV##6650:=lq_tmp$x##6653][lq_tmp$x##6633:=lq_anf$##7205759403792827684##d8RK][lq_tmp$x##6634:=lq_anf$##7205759403792827685##d8RL][lq_tmp$x##6635:=lq_anf$##7205759403792827682##d8RI]}) | lq_tmp$x##6627 == Data.Vector.zipWith lq_anf$##7205759403792827684##d8RK lq_anf$##7205759403792827685##d8RL lq_anf$##7205759403792827682##d8RI}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":61,"startCol":41,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827657","{lq_tmp$x##5746 : (Data.Vector.Storable.Vector {lq_tmp$x##5745 : a | $k_##5742[VV##5741:=lq_tmp$x##5745][VV##5743:=lq_tmp$x##5746][lq_tmp$x##5730:=deriv##a5NJ][lq_tmp$x##5731:=lq_anf$##7205759403792827656##d8Ri]}) | $k_##5744[VV##5743:=lq_tmp$x##5746][lq_tmp$x##5730:=deriv##a5NJ][lq_tmp$x##5731:=lq_anf$##7205759403792827656##d8Ri]\n                                                                                                                                                                                                                        && lq_tmp$x##5746 == GHC.Base.$ deriv##a5NJ lq_anf$##7205759403792827656##d8Ri}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":12,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.loadNetwork","forall a .\n(Foreign.Storable.Storable<[]> a, Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\nlq_tmp$x##7996:[GHC.Types.Char] -> (GHC.Types.IO (Neuro.Network a))"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":36,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{lq_tmp$x##2812 : GHC.Types.Int | $k_##2736[VV##2735:=lq_tmp$x##2812][lq_tmp$x##2731:=n##a5Lf]\n                                  && lq_tmp$x##2812 == m##a5Lg}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":18,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["randomMat","forall f t .\n(Foreign.Storable.Storable<[]> t, Control.Monad.Primitive.PrimMonad<[]> f, System.Random.MWC.Variate<[]> t) =>\nlq_tmp$x##2731:{VV##2732 : GHC.Types.Int | $k_##2733} -> lq_tmp$x##2734:{VV##2735 : GHC.Types.Int | $k_##2736} -> lq_tmp$x##2737:{VV##2742 : (System.Random.MWC.Gen {VV##2740 : (Control.Monad.Primitive.PrimState {VV##2738 : f | $k_##2739}) | $k_##2741}) | $k_##2743} -> {VV##2750 : {VV##2744 : f | $k_##2745} {VV##2748 : (Internal.Matrix.Matrix {VV##2746 : t | $k_##2747}) | $k_##2749} | $k_##2751}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":99,"startCol":96,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##4676:a -> a"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":121,"startCol":114,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","{lq_tmp$x##4839 : [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] | len lq_tmp$x##4839 >= 0\n                                                                                         && lq_tmp$x##4839 == samples##a5XO}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":70,"startCol":67,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##6948:a -> a"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":22,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ws","(Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":22,"startCol":21,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{VV##2735 : GHC.Types.Int | $k_##2736[lq_tmp$x##2731:=n##a5Lf]}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":15,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["mat","{lq_tmp$x##3253 : (Internal.Matrix.Matrix {lq_tmp$x##3268 : t | $k_##2747[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2746:=lq_tmp$x##3268][VV##2748:=lq_tmp$x##3253][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3252:=lq_tmp$x##3268][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR]}) | $k_##2749[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2748:=lq_tmp$x##3253][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR]}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":26,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))]"]]],[{"spanInfo":{"startLine":63,"endLine":65,"endCol":54,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827702","{lq_tmp$x##7274 : GHC.Types.Bool | lq_tmp$x##7274 == pr##a5KS lq_anf$##7205759403792827700##d8S0 n##a5KZ samples##a5KX\n                                   && lq_tmp$x##7274 == pr##a5KS lq_anf$##7205759403792827700##d8S0 n##a5KZ samples##a5KX\n                                   && lq_tmp$x##7274 == lq_anf$##7205759403792827701##d8S1}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":45,"startCol":28,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{lq_tmp$x##7660 : GHC.Types.Bool | (lq_tmp$x##7660 <=> k##a505 > n##a504)\n                                   && lq_tmp$x##7660 == GHC.Classes.> k##a505 n##a504}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":22,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##6782:a -> a"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":36,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","lq_tmp$x##7120:a -> a"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":59,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["g","{lq_tmp$x##2869 : (System.Random.MWC.Gen {lq_tmp$x##2868 : (Control.Monad.Primitive.PrimState {lq_tmp$x##2867 : f | $k_##2739[VV##2738:=lq_tmp$x##2867][VV##2740:=lq_tmp$x##2868][VV##2742:=lq_tmp$x##2869][lq_tmp$x##2731:=n##a5Lf][lq_tmp$x##2734:=m##a5Lg]}) | $k_##2741[VV##2740:=lq_tmp$x##2868][VV##2742:=lq_tmp$x##2869][lq_tmp$x##2731:=n##a5Lf][lq_tmp$x##2734:=m##a5Lg]}) | $k_##2743[VV##2742:=lq_tmp$x##2869][lq_tmp$x##2731:=n##a5Lf][lq_tmp$x##2734:=m##a5Lg]\n                                                                                                                                                                                                                                                                                                                                                                                      && lq_tmp$x##2869 == g##a5Lh}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":62,"startCol":61,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{lq_tmp$x##2828 : GHC.Types.Int | $k_##2733[VV##2732:=lq_tmp$x##2828]\n                                  && lq_tmp$x##2828 == n##a5Lf}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":27,"startCol":23,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","lq_tmp$x##6783:a -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":39,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["hiddens","{lq_tmp$x##2536 : [GHC.Types.Int] | len lq_tmp$x##2536 >= 0\n                                    && lq_tmp$x##2536 == hiddens##a5L3}"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":49,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827647","{lq_tmp$x##5635 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5635 == Internal.Container.#> lq_anf$##7205759403792827646##d8R8 lq_anf$##7205759403792827644##d8R6}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":37,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827721","lq_tmp$x##8240:Data.ByteString.Lazy.Internal.ByteString -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":75,"startCol":71,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","lq_tmp$x##6952:a -> a"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":38,"startCol":30,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["expected","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":63,"startCol":53,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827614","{lq_tmp$x##4315 : [{lq_tmp$x##4328 : (Data.Vector.Storable.Vector {lq_tmp$x##4327 : a | $k_##4324[VV##4323:=lq_tmp$x##4327][VV##4325:=lq_tmp$x##4328][lq_tmp$x##4319:=input##a5MC][lq_tmp$x##4320:=lq_anf$##7205759403792827613##d8QB]}) | $k_##4326[VV##4325:=lq_tmp$x##4328][lq_tmp$x##4319:=input##a5MC][lq_tmp$x##4320:=lq_anf$##7205759403792827613##d8QB]}]<\\lq_tmp$x##4322 VV -> {lq_tmp$x##4328 : (Data.Vector.Storable.Vector {lq_tmp$x##4327 : a | $k_##4330[VV##4329:=lq_tmp$x##4327][VV##4331:=lq_tmp$x##4328][lq_tmp$x##4319:=input##a5MC][lq_tmp$x##4320:=lq_anf$##7205759403792827613##d8QB][lq_tmp$x##4333:=lq_tmp$x##4322]}) | $k_##4332[VV##4331:=lq_tmp$x##4328][lq_tmp$x##4319:=input##a5MC][lq_tmp$x##4320:=lq_anf$##7205759403792827613##d8QB][lq_tmp$x##4333:=lq_tmp$x##4322]}> | tail lq_tmp$x##4315 == lq_anf$##7205759403792827613##d8QB\nhead lq_tmp$x##4315 == input##a5MC\nlqdc##$select##GHC.Types.:##2 lq_tmp$x##4315 == lq_anf$##7205759403792827613##d8QB\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         && lqdc##$select##GHC.Types.:##1 lq_tmp$x##4315 == input##a5MC\nis$GHC.Types.: lq_tmp$x##4315 <=> true)\nis$GHC.Types.[] lq_tmp$x##4315 <=> false)\nlen lq_tmp$x##4315 == 1 + len lq_anf$##7205759403792827613##d8QB\nlq_tmp$x##4315 == GHC.Types.: input##a5MC lq_anf$##7205759403792827613##d8QB\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         && lq_tmp$x##4315 == GHC.Types.: input##a5MC lq_anf$##7205759403792827613##d8QB}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":44,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827597","lq_tmp$x##3612:(lq_tmp$x##3660:{lq_tmp$x##3686 : (System.Random.MWC.Gen {lq_tmp$x##3685 : (GHC.Types.Any {lq_tmp$x##3684 : (TYPE {lq_tmp$x##3683 : 'GHC.Types.LiftedRep | $k_##3662[VV##3661:=lq_tmp$x##3683][VV##3663:=lq_tmp$x##3684][VV##3665:=lq_tmp$x##3685][VV##3667:=lq_tmp$x##3686][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3664[VV##3663:=lq_tmp$x##3684][VV##3665:=lq_tmp$x##3685][VV##3667:=lq_tmp$x##3686][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3666[VV##3665:=lq_tmp$x##3685][VV##3667:=lq_tmp$x##3686][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3668[VV##3667:=lq_tmp$x##3686][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]} -> {lq_tmp$x##3693 : (GHC.ST.ST {lq_tmp$x##3689 : (GHC.Types.Any {lq_tmp$x##3688 : (TYPE {lq_tmp$x##3687 : 'GHC.Types.LiftedRep | $k_##3670[VV##3669:=lq_tmp$x##3687][VV##3671:=lq_tmp$x##3688][VV##3673:=lq_tmp$x##3689][VV##3681:=lq_tmp$x##3693][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3672[VV##3671:=lq_tmp$x##3688][VV##3673:=lq_tmp$x##3689][VV##3681:=lq_tmp$x##3693][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3674[VV##3673:=lq_tmp$x##3689][VV##3681:=lq_tmp$x##3693][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]} {lq_tmp$x##3692 : (Data.Vector.Vector {lq_tmp$x##3691 : (Internal.Matrix.Matrix {lq_tmp$x##3690 : a | $k_##3676[VV##3675:=lq_tmp$x##3690][VV##3677:=lq_tmp$x##3691][VV##3679:=lq_tmp$x##3692][VV##3681:=lq_tmp$x##3693][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3678[VV##3677:=lq_tmp$x##3691][VV##3679:=lq_tmp$x##3692][VV##3681:=lq_tmp$x##3693][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3680[VV##3679:=lq_tmp$x##3692][VV##3681:=lq_tmp$x##3693][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3682[VV##3681:=lq_tmp$x##3693][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) -> {lq_tmp$x##3659 : (GHC.Types.IO {lq_tmp$x##3658 : (Data.Vector.Vector {lq_tmp$x##3657 : (Internal.Matrix.Matrix {lq_tmp$x##3656 : a | $k_##3649[VV##3648:=lq_tmp$x##3656][VV##3650:=lq_tmp$x##3657][VV##3652:=lq_tmp$x##3658][VV##3654:=lq_tmp$x##3659][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3651[VV##3650:=lq_tmp$x##3657][VV##3652:=lq_tmp$x##3658][VV##3654:=lq_tmp$x##3659][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3653[VV##3652:=lq_tmp$x##3658][VV##3654:=lq_tmp$x##3659][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]}) | $k_##3655[VV##3654:=lq_tmp$x##3659][lq_tmp$x##3610:=lq_anf$##7205759403792827594##d8Qi][lq_tmp$x##3611:=lq_anf$##7205759403792827596##d8Qk]\nlq_tmp$x##3659 == GHC.Base.. lq_anf$##7205759403792827594##d8Qi lq_anf$##7205759403792827596##d8Qk lq_tmp$x##3612\nlq_tmp$x##3659 == lq_anf$##7205759403792827594##d8Qi (lq_anf$##7205759403792827596##d8Qk lq_tmp$x##3612)}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":15,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827591","lq_tmp$x##25:(GHC.Types.IO {lq_tmp$x##3494 : (Data.Vector.Vector {lq_tmp$x##3493 : (Internal.Matrix.Matrix {lq_tmp$x##3492 : a | $k_##3487[VV##3486:=lq_tmp$x##3492][VV##3488:=lq_tmp$x##3493][VV##3490:=lq_tmp$x##3494][lq_tmp$x##23:=lq_anf$##7205759403792827590##d8Qe]}) | $k_##3489[VV##3488:=lq_tmp$x##3493][VV##3490:=lq_tmp$x##3494][lq_tmp$x##23:=lq_anf$##7205759403792827590##d8Qe]}) | $k_##3491[VV##3490:=lq_tmp$x##3494][lq_tmp$x##23:=lq_anf$##7205759403792827590##d8Qe]}) -> (GHC.Types.IO {lq_tmp$x##3500 : (Neuro.Network {lq_tmp$x##3499 : a | $k_##3496[VV##3495:=lq_tmp$x##3499][VV##3497:=lq_tmp$x##3500][lq_tmp$x##23:=lq_anf$##7205759403792827590##d8Qe]}) | $k_##3498[VV##3497:=lq_tmp$x##3500][lq_tmp$x##23:=lq_anf$##7205759403792827590##d8Qe]})"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":83,"startCol":41,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Data.Vector.zipWith","{VV : forall a b c .\n      lq_tmp$x##6018:(lq_tmp$x##6016:a -> lq_tmp$x##6017:b -> c) -> lq_tmp$x##6019:(Data.Vector.Vector a) -> lq_tmp$x##6020:(Data.Vector.Vector b) -> (Data.Vector.Vector c) | VV == Data.Vector.zipWith}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":72,"startCol":62,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["dimensions","{lq_tmp$x##3861 : [{lq_tmp$x##3854 : ({lq_tmp$x##3850 : GHC.Types.Int | $k_##2667[VV##2666:=lq_tmp$x##3850][VV##2673:=lq_tmp$x##3854][VV##2685:=lq_tmp$x##3861][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2687:=lq_tmp$x##3850][lq_tmp$x##2691:=lq_tmp$x##3854][lq_tmp$x##2698:=lq_tmp$x##3861]}, {lq_tmp$x##3851 : GHC.Types.Int | $k_##2669[VV##2668:=lq_tmp$x##3851][VV##2673:=lq_tmp$x##3854][VV##2685:=lq_tmp$x##3861][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2688:=lq_tmp$x##3851][lq_tmp$x##2691:=lq_tmp$x##3854][lq_tmp$x##2698:=lq_tmp$x##3861]})<\\lq_tmp$x##3862 VV -> {lq_tmp$x##3853 : GHC.Types.Int | $k_##2672[VV##2671:=lq_tmp$x##3853][VV##2673:=lq_tmp$x##3854][VV##2685:=lq_tmp$x##3861][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2670:=lq_tmp$x##3862][lq_tmp$x##2689:=lq_tmp$x##3862][lq_tmp$x##2690:=lq_tmp$x##3853][lq_tmp$x##2691:=lq_tmp$x##3854][lq_tmp$x##2698:=lq_tmp$x##3861][lq_tmp$x##3852:=lq_tmp$x##3862]}> | $k_##2674[VV##2673:=lq_tmp$x##3854][VV##2685:=lq_tmp$x##3861][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2691:=lq_tmp$x##3854][lq_tmp$x##2698:=lq_tmp$x##3861]}]<\\lq_tmp$x##3864 VV -> {lq_tmp$x##3860 : ({lq_tmp$x##3856 : GHC.Types.Int | $k_##2677[VV##2676:=lq_tmp$x##3856][VV##2683:=lq_tmp$x##3860][VV##2685:=lq_tmp$x##3861][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##3864][lq_tmp$x##2692:=lq_tmp$x##3864][lq_tmp$x##2693:=lq_tmp$x##3856][lq_tmp$x##2697:=lq_tmp$x##3860][lq_tmp$x##2698:=lq_tmp$x##3861][lq_tmp$x##3855:=lq_tmp$x##3864]}, {lq_tmp$x##3857 : GHC.Types.Int | $k_##2679[VV##2678:=lq_tmp$x##3857][VV##2683:=lq_tmp$x##3860][VV##2685:=lq_tmp$x##3861][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##3864][lq_tmp$x##2692:=lq_tmp$x##3864][lq_tmp$x##2694:=lq_tmp$x##3857][lq_tmp$x##2697:=lq_tmp$x##3860][lq_tmp$x##2698:=lq_tmp$x##3861][lq_tmp$x##3855:=lq_tmp$x##3864]})<\\lq_tmp$x##3863 VV -> {lq_tmp$x##3859 : GHC.Types.Int | $k_##2682[VV##2681:=lq_tmp$x##3859][VV##2683:=lq_tmp$x##3860][VV##2685:=lq_tmp$x##3861][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##3864][lq_tmp$x##2680:=lq_tmp$x##3863][lq_tmp$x##2692:=lq_tmp$x##3864][lq_tmp$x##2695:=lq_tmp$x##3863][lq_tmp$x##2696:=lq_tmp$x##3859][lq_tmp$x##2697:=lq_tmp$x##3860][lq_tmp$x##2698:=lq_tmp$x##3861][lq_tmp$x##3855:=lq_tmp$x##3864][lq_tmp$x##3858:=lq_tmp$x##3863]}> | $k_##2684[VV##2683:=lq_tmp$x##3860][VV##2685:=lq_tmp$x##3861][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##3864][lq_tmp$x##2692:=lq_tmp$x##3864][lq_tmp$x##2697:=lq_tmp$x##3860][lq_tmp$x##2698:=lq_tmp$x##3861][lq_tmp$x##3855:=lq_tmp$x##3864]}> | $k_##2686[VV##2685:=lq_tmp$x##3861][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2698:=lq_tmp$x##3861]\nlq_tmp$x##3861 == GHC.Base.$ lq_anf$##7205759403792827561##d8PL lq_anf$##7205759403792827565##d8PP\nlq_tmp$x##3861 == GHC.Base.$ lq_anf$##7205759403792827561##d8PL lq_anf$##7205759403792827565##d8PP\nlen lq_tmp$x##3861 >= 0\nlq_tmp$x##3861 == dimensions##a5L7}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":81,"startCol":73,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall a .\n      {lq_tmp$x##3775 : (Data.Vector.Vector a) | lq_tmp$x##3775 == Data.Vector.empty} | VV == Data.Vector.empty}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":6,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$cget","forall a .\n(Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\n{VV##1785 : (Data.Binary.Get.Internal.Get {VV##1783 : (Neuro.Network {VV##1781 : a | $k_##1782}) | $k_##1784}) | $k_##1786}"]]],[{"spanInfo":{"startLine":95,"endLine":95,"endCol":26,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","lq_tmp$x##5469:a -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":54,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827561","lq_tmp$x##2569:[{lq_tmp$x##2580 : GHC.Types.Int | $k_##2579[VV##2578:=lq_tmp$x##2580][lq_tmp$x##2568:=lq_anf$##7205759403792827560##d8PK]}] -> {lq_tmp$x##2563 : [({lq_tmp$x##2577 : GHC.Types.Int | $k_##2576[VV##2575:=lq_tmp$x##2577][lq_tmp$x##2568:=lq_anf$##7205759403792827560##d8PK]}, {lq_tmp$x##2580 : GHC.Types.Int | $k_##2579[VV##2578:=lq_tmp$x##2580][lq_tmp$x##2568:=lq_anf$##7205759403792827560##d8PK]})] | len lq_tmp$x##2563 <= len lq_anf$##7205759403792827560##d8PK\n                                                                                                                                                                                                                                                                                                                                                                                                                              && len lq_tmp$x##2563 <= len lq_tmp$x##2569\n                                                                                                                                                                                                                                                                                                                                                                                                                              && (len lq_anf$##7205759403792827560##d8PK == len lq_tmp$x##2569 => len lq_tmp$x##2563 == len lq_anf$##7205759403792827560##d8PK)}"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":41,"startCol":33,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827679","{lq_tmp$x##6496 : a | lq_tmp$x##6496 == (-alpha##a5NN)\n                      && lq_tmp$x##6496 == GHC.Num.negate alpha##a5NN}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":29,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","(Data.Vector.Vector (Data.Vector.Storable.Vector a))"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":10,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","ds_d8q7:{VV##5484 : ({VV##5473 : (Data.Vector.Storable.Vector {VV##5471 : a | $k_##5472}) | $k_##5474}, {VV##5477 : (Internal.Matrix.Matrix {VV##5475 : a | $k_##5476}) | $k_##5478})<\\lq_tmp$x##5479 VV -> {VV##5482 : (Internal.Matrix.Matrix {VV##5480 : a | $k_##5481}) | $k_##5483}> | $k_##5485} -> del##a5NM:{VV##5489 : (Data.Vector.Storable.Vector {VV##5487 : a | $k_##5488}) | $k_##5490} -> {VV##5494 : (Data.Vector.Storable.Vector {VV##5492 : a | $k_##5493}) | $k_##5495}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":69,"startCol":67,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827663","{lq_tmp$x##5984 : (Data.Vector.Vector {lq_tmp$x##5983 : (Data.Vector.Storable.Vector {lq_tmp$x##5982 : a | $k_##5883[VV##5882:=lq_tmp$x##5982][VV##5884:=lq_tmp$x##5983][lq_tmp$x##5850:=lq_tmp$x##5984][lq_tmp$x##5856:=f##a5NI][lq_tmp$x##5857:=lq_anf$##7205759403792827659##d8Rl][lq_tmp$x##5858:=lq_anf$##7205759403792827661##d8Rn][lq_tmp$x##5886:=lq_tmp$x##5982][lq_tmp$x##5887:=lq_tmp$x##5983][lq_tmp$x##5919:=lq_tmp$x##5982][lq_tmp$x##5920:=lq_tmp$x##5983][lq_tmp$x##5921:=lq_tmp$x##5984][lq_tmp$x##5923:=lq_tmp$x##5982][lq_tmp$x##5924:=lq_tmp$x##5983][lq_tmp$x##5925:=lq_tmp$x##5984]\n                                                                                                           && $k_##5883[VV##5882:=lq_tmp$x##5982][VV##5884:=lq_tmp$x##5983][lq_tmp$x##5850:=lq_anf$##7205759403792827663##d8Rp][lq_tmp$x##5856:=f##a5NI][lq_tmp$x##5857:=lq_anf$##7205759403792827659##d8Rl][lq_tmp$x##5858:=lq_anf$##7205759403792827661##d8Rn][lq_tmp$x##5886:=lq_tmp$x##5982][lq_tmp$x##5887:=lq_tmp$x##5983][lq_tmp$x##5919:=lq_tmp$x##5982][lq_tmp$x##5920:=lq_tmp$x##5983][lq_tmp$x##5921:=lq_anf$##7205759403792827663##d8Rp][lq_tmp$x##5923:=lq_tmp$x##5982][lq_tmp$x##5924:=lq_tmp$x##5983][lq_tmp$x##5925:=lq_anf$##7205759403792827663##d8Rp][lq_tmp$x##5935:=lq_anf$##7205759403792827667##d8Rt][lq_tmp$x##5936:=lq_anf$##7205759403792827668##d8Ru][lq_tmp$x##5937:=lq_anf$##7205759403792827669##d8Rv]}) | $k_##5885[VV##5884:=lq_tmp$x##5983][lq_tmp$x##5850:=lq_tmp$x##5984][lq_tmp$x##5856:=f##a5NI][lq_tmp$x##5857:=lq_anf$##7205759403792827659##d8Rl][lq_tmp$x##5858:=lq_anf$##7205759403792827661##d8Rn][lq_tmp$x##5887:=lq_tmp$x##5983][lq_tmp$x##5920:=lq_tmp$x##5983][lq_tmp$x##5921:=lq_tmp$x##5984][lq_tmp$x##5924:=lq_tmp$x##5983][lq_tmp$x##5925:=lq_tmp$x##5984]\nk_##5885[VV##5884:=lq_tmp$x##5983][lq_tmp$x##5850:=lq_anf$##7205759403792827663##d8Rp][lq_tmp$x##5856:=f##a5NI][lq_tmp$x##5857:=lq_anf$##7205759403792827659##d8Rl][lq_tmp$x##5858:=lq_anf$##7205759403792827661##d8Rn][lq_tmp$x##5887:=lq_tmp$x##5983][lq_tmp$x##5920:=lq_tmp$x##5983][lq_tmp$x##5921:=lq_anf$##7205759403792827663##d8Rp][lq_tmp$x##5924:=lq_tmp$x##5983][lq_tmp$x##5925:=lq_anf$##7205759403792827663##d8Rp][lq_tmp$x##5935:=lq_anf$##7205759403792827667##d8Rt][lq_tmp$x##5936:=lq_anf$##7205759403792827668##d8Ru][lq_tmp$x##5937:=lq_anf$##7205759403792827669##d8Rv]}) | lq_tmp$x##5984 == Data.Vector.scanr f##a5NI lq_anf$##7205759403792827659##d8Rl lq_anf$##7205759403792827661##d8Rn\nlq_tmp$x##5984 == Data.Vector.scanr f##a5NI lq_anf$##7205759403792827659##d8Rl lq_anf$##7205759403792827661##d8Rn\nvlen lq_tmp$x##5984\nlq_tmp$x##5984 == lq_anf$##7205759403792827662##d8Ro\nvlen lq_tmp$x##5984\nlq_tmp$x##5984 == Data.Vector.Vector lq_anf$##7205759403792827667##d8Rt lq_anf$##7205759403792827668##d8Ru lq_anf$##7205759403792827669##d8Rv\nlq_tmp$x##5984 == Data.Vector.Vector lq_anf$##7205759403792827667##d8Rt lq_anf$##7205759403792827668##d8Ru lq_anf$##7205759403792827669##d8Rv\nlq_tmp$x##5984 == Data.Vector.Vector lq_anf$##7205759403792827667##d8Rt lq_anf$##7205759403792827668##d8Ru lq_anf$##7205759403792827669##d8Rv\nvlen lq_tmp$x##5984\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             && lq_tmp$x##5984 == lq_anf$##7205759403792827663##d8Rp}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":28,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827659","{lq_tmp$x##5907 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5907 == lq_anf$##7205759403792827655##d8Rh * lq_anf$##7205759403792827657##d8Rj\n                                                    && lq_tmp$x##5907 == GHC.Num.* lq_anf$##7205759403792827655##d8Rh lq_anf$##7205759403792827657##d8Rj\n                                                    && lq_tmp$x##5907 == GHC.Num.* lq_anf$##7205759403792827655##d8Rh lq_anf$##7205759403792827657##d8Rj\n                                                    && lq_tmp$x##5907 == lq_anf$##7205759403792827658##d8Rk\n                                                    && lq_tmp$x##5907 == Data.Vector.Storable.Vector lq_anf$##7205759403792827670##d8Rw lq_anf$##7205759403792827671##d8Rx lq_anf$##7205759403792827672##d8Ry\n                                                    && lq_tmp$x##5907 == Data.Vector.Storable.Vector lq_anf$##7205759403792827670##d8Rw lq_anf$##7205759403792827671##d8Rx lq_anf$##7205759403792827672##d8Ry\n                                                    && lq_tmp$x##5907 == Data.Vector.Storable.Vector lq_anf$##7205759403792827670##d8Rw lq_anf$##7205759403792827671##d8Rx lq_anf$##7205759403792827672##d8Ry\n                                                    && lq_tmp$x##5907 == lq_anf$##7205759403792827659##d8Rl}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":41,"startCol":40,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827563","{lq_tmp$x##2590 : GHC.Types.Int | lq_tmp$x##2590 == lq_anf$##7205759403792827562##d8PM\n                                  && lq_tmp$x##2590 == GHC.Types.I# lq_anf$##7205759403792827562##d8PM}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":25,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","lq_tmp$x##5903:{lq_tmp$x##5895 : ({lq_tmp$x##5889 : (Data.Vector.Storable.Vector {lq_tmp$x##5888 : a | $k_##5472[VV##5471:=lq_tmp$x##5888][VV##5473:=lq_tmp$x##5889][VV##5484:=lq_tmp$x##5895]}) | $k_##5474[VV##5473:=lq_tmp$x##5889][VV##5484:=lq_tmp$x##5895]}, {lq_tmp$x##5891 : (Internal.Matrix.Matrix {lq_tmp$x##5890 : a | $k_##5476[VV##5475:=lq_tmp$x##5890][VV##5477:=lq_tmp$x##5891][VV##5484:=lq_tmp$x##5895]}) | $k_##5478[VV##5477:=lq_tmp$x##5891][VV##5484:=lq_tmp$x##5895]})<\\lq_tmp$x##5905 VV -> {lq_tmp$x##5894 : (Internal.Matrix.Matrix {lq_tmp$x##5893 : a | $k_##5481[VV##5480:=lq_tmp$x##5893][VV##5482:=lq_tmp$x##5894][VV##5484:=lq_tmp$x##5895][lq_tmp$x##5479:=lq_tmp$x##5905][lq_tmp$x##5892:=lq_tmp$x##5905][lq_tmp$x##5902:=lq_tmp$x##5905]}) | $k_##5483[VV##5482:=lq_tmp$x##5894][VV##5484:=lq_tmp$x##5895][lq_tmp$x##5479:=lq_tmp$x##5905][lq_tmp$x##5892:=lq_tmp$x##5905][lq_tmp$x##5902:=lq_tmp$x##5905]}> | $k_##5485[VV##5484:=lq_tmp$x##5895]} -> lq_tmp$x##5904:{lq_tmp$x##5897 : (Data.Vector.Storable.Vector {lq_tmp$x##5896 : a | $k_##5488[VV##5487:=lq_tmp$x##5896][VV##5489:=lq_tmp$x##5897][ds_d8q7:=lq_tmp$x##5903]}) | $k_##5490[VV##5489:=lq_tmp$x##5897][ds_d8q7:=lq_tmp$x##5903]} -> {lq_tmp$x##5899 : (Data.Vector.Storable.Vector {lq_tmp$x##5898 : a | $k_##5493[VV##5492:=lq_tmp$x##5898][VV##5494:=lq_tmp$x##5899][del##a5NM:=lq_tmp$x##5904][ds_d8q7:=lq_tmp$x##5903]}) | $k_##5495[VV##5494:=lq_tmp$x##5899][del##a5NM:=lq_tmp$x##5904][ds_d8q7:=lq_tmp$x##5903]}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":25,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##4026:a -> a"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":48,"startCol":40,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Codec.Compression.Zlib.compress","lq_tmp$x##8284:Data.ByteString.Lazy.Internal.ByteString -> Data.ByteString.Lazy.Internal.ByteString"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":15,"startCol":13,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["fp","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":76,"startCol":47,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827698","lq_tmp$x##6925:(Neuro.Network a) -> lq_tmp$x##6926:((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a)) -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":26,"startCol":23,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##4907:a -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":19,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["dimensions","{lq_tmp$x##2698 : [{lq_tmp$x##2691 : ({lq_tmp$x##2687 : GHC.Types.Int | $k_##2667[VV##2666:=lq_tmp$x##2687][VV##2673:=lq_tmp$x##2691][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP]}, {lq_tmp$x##2688 : GHC.Types.Int | $k_##2669[VV##2668:=lq_tmp$x##2688][VV##2673:=lq_tmp$x##2691][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP]})<\\lq_tmp$x##2689 VV -> {lq_tmp$x##2690 : GHC.Types.Int | $k_##2672[VV##2671:=lq_tmp$x##2690][VV##2673:=lq_tmp$x##2691][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2670:=lq_tmp$x##2689]}> | $k_##2674[VV##2673:=lq_tmp$x##2691][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP]}]<\\lq_tmp$x##2692 VV -> {lq_tmp$x##2697 : ({lq_tmp$x##2693 : GHC.Types.Int | $k_##2677[VV##2676:=lq_tmp$x##2693][VV##2683:=lq_tmp$x##2697][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##2692]}, {lq_tmp$x##2694 : GHC.Types.Int | $k_##2679[VV##2678:=lq_tmp$x##2694][VV##2683:=lq_tmp$x##2697][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##2692]})<\\lq_tmp$x##2695 VV -> {lq_tmp$x##2696 : GHC.Types.Int | $k_##2682[VV##2681:=lq_tmp$x##2696][VV##2683:=lq_tmp$x##2697][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##2692][lq_tmp$x##2680:=lq_tmp$x##2695]}> | $k_##2684[VV##2683:=lq_tmp$x##2697][VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP][lq_tmp$x##2675:=lq_tmp$x##2692]}> | $k_##2686[VV##2685:=lq_tmp$x##2698][lq_tmp$x##2650:=lq_anf$##7205759403792827561##d8PL][lq_tmp$x##2651:=lq_anf$##7205759403792827565##d8PP]\nlq_tmp$x##2698 == GHC.Base.$ lq_anf$##7205759403792827561##d8PL lq_anf$##7205759403792827565##d8PP}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":10,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.quadError","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, GHC.Real.Fractional<[]> (Internal.Numeric.RealOf a), Internal.Util.Normed<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Numeric<[]> a) =>\nlq_tmp$x##4454:(lq_tmp$x##4445:a -> a) -> lq_tmp$x##4455:(Neuro.Network a) -> lq_tmp$x##4456:[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> (Internal.Numeric.RealOf a)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":28,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827605","lq_tmp$x##4164:(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":33,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","{lq_tmp$x##7269 : [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] | len lq_tmp$x##7269 >= 0\n                                                                                         && lq_tmp$x##7269 == samples##a5KX}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":39,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827629","{lq_tmp$x##4995 : (Data.Vector.Storable.Vector {lq_tmp$x##4994 : a | $k_##4981[VV##4980:=lq_tmp$x##4994][VV##4982:=lq_tmp$x##4995]}) | $k_##4983[VV##4982:=lq_tmp$x##4995]\n                                                                                                                                       && lq_tmp$x##4995 == inp##a5NA}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":110,"startCol":72,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827683","v_B1:{VV##6595 : (Data.Vector.Vector {VV##6593 : (Internal.Matrix.Matrix {VV##6591 : a | $k_##6592}) | $k_##6594}) | $k_##6596} -> {VV : (Neuro.Network a) | VV ~~ v_B1}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":25,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827526","lq_tmp$x##2108:[(Internal.Matrix.Matrix a)] -> (Data.Binary.Put.PutM ())"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":30,"startCol":29,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827577","{lq_tmp$x##3275 : GHC.Types.Int | $k_##2982[VV##2981:=lq_tmp$x##3275][VV##2988:=lq_anf$##7205759403792827576##d8Q0][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3031:=lq_tmp$x##3275][lq_tmp$x##3035:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3130:=lq_tmp$x##3275][lq_tmp$x##3134:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3176:=lq_tmp$x##3275][lq_tmp$x##3180:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3183:=lq_tmp$x##3275][lq_tmp$x##3187:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3214:=lq_tmp$x##3275][lq_tmp$x##3216:=lq_tmp$x##3275]\n                                  && lq_tmp$x##3275 == n##a5La\n                                  && lq_tmp$x##3275 == lq_anf$##7205759403792827589##d8Qd\n                                  && lq_tmp$x##3275 == lq_anf$##7205759403792827589##d8Qd\n                                  && lq_tmp$x##3275 == lq_anf$##7205759403792827589##d8Qd\n                                  && lq_tmp$x##3275 == lq_anf$##7205759403792827577##d8Q1}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":8,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.outputs","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Numeric<[]> a, Foreign.Storable.Storable<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a)) =>\nlq_tmp$x##4912:(Neuro.Network a) -> lq_tmp$x##4913:(lq_tmp$x##4907:a -> a) -> lq_tmp$x##4914:(Data.Vector.Storable.Vector a) -> (Data.Vector.Vector (Data.Vector.Storable.Vector a))"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":110,"startCol":69,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Float.$fNumDouble","{lq_tmp$x##4744 : (GHC.Num.Num GHC.Types.Double) | lq_tmp$x##4744 == GHC.Float.$fNumDouble}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":6,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.tanh'","forall a . (GHC.Float.Floating<[]> a) => lq_tmp$x##7891:a -> a"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":30,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act'","lq_tmp$x##6448:a -> a"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":81,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall r a b .\n      lq_tmp$x##3970:(lq_tmp$x##3969:a -> b) -> lq_tmp$x##3971:a -> b | VV == GHC.Base.$}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":32,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{lq_tmp$x##5077 : (Internal.Matrix.Matrix {lq_tmp$x##5076 : a | $k_##4986[VV##4985:=lq_tmp$x##5076][VV##4987:=lq_tmp$x##5077]}) | $k_##4988[VV##4987:=lq_tmp$x##5077]\n                                                                                                                                  && lq_tmp$x##5077 == m##a5NB}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":57,"startCol":54,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","{lq_tmp$x##7461 : (Neuro.Network a) | lq_tmp$x##7461 == net##a5KW}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":39,"startCol":29,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827619","lq_tmp$x##4537:GHC.Types.Double -> (Internal.Numeric.RealOf a)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":10,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","inp##a5ME:{VV##4101 : (Data.Vector.Storable.Vector {VV##4099 : a | $k_##4100}) | $k_##4102} -> m##a5MF:{VV##4106 : (Internal.Matrix.Matrix {VV##4104 : a | $k_##4105}) | $k_##4107} -> {VV##4111 : (Data.Vector.Storable.Vector {VV##4109 : a | $k_##4110}) | $k_##4112}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":34,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827593","lq_tmp$x##3531:(lq_tmp$x##3529:(System.Random.MWC.Gen (Control.Monad.Primitive.PrimState (GHC.ST.ST (GHC.Types.Any (TYPE 'GHC.Types.LiftedRep))))) -> (GHC.ST.ST (GHC.Types.Any (TYPE 'GHC.Types.LiftedRep)) {lq_tmp$x##3544 : (Data.Vector.Vector {lq_tmp$x##3543 : (Internal.Matrix.Matrix {lq_tmp$x##3542 : a | $k_##3537[VV##3536:=lq_tmp$x##3542][VV##3538:=lq_tmp$x##3543][VV##3540:=lq_tmp$x##3544][lq_tmp$x##3530:=lq_anf$##7205759403792827592##d8Qg]}) | $k_##3539[VV##3538:=lq_tmp$x##3543][VV##3540:=lq_tmp$x##3544][lq_tmp$x##3530:=lq_anf$##7205759403792827592##d8Qg]}) | $k_##3541[VV##3540:=lq_tmp$x##3544][lq_tmp$x##3530:=lq_anf$##7205759403792827592##d8Qg]})) -> (GHC.Types.IO {lq_tmp$x##3544 : (Data.Vector.Vector {lq_tmp$x##3543 : (Internal.Matrix.Matrix {lq_tmp$x##3542 : a | $k_##3537[VV##3536:=lq_tmp$x##3542][VV##3538:=lq_tmp$x##3543][VV##3540:=lq_tmp$x##3544][lq_tmp$x##3530:=lq_anf$##7205759403792827592##d8Qg]}) | $k_##3539[VV##3538:=lq_tmp$x##3543][VV##3540:=lq_tmp$x##3544][lq_tmp$x##3530:=lq_anf$##7205759403792827592##d8Qg]}) | $k_##3541[VV##3540:=lq_tmp$x##3544][lq_tmp$x##3530:=lq_anf$##7205759403792827592##d8Qg]})"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":42,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827680","lq_tmp$x##6516:(Internal.Matrix.Matrix a) -> (Internal.Matrix.Matrix a)"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":15,"startCol":13,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["fp","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":17,"startCol":16,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{VV##4106 : (Internal.Matrix.Matrix {VV##4104 : a | $k_##4105}) | $k_##4107}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":64,"startCol":46,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827615","{lq_tmp$x##4354 : (Data.Vector.Storable.Vector a) | lq_tmp$x##4354 == Internal.Vector.vjoin lq_anf$##7205759403792827614##d8QC}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":46,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827719","lq_tmp$x##8105:{lq_tmp$x##8123 : Data.ByteString.Lazy.Internal.ByteString | $k_##8122[VV##8121:=lq_tmp$x##8123][lq_tmp$x##8103:=lq_anf$##7205759403792827716##d8Sg][lq_tmp$x##8104:=lq_anf$##7205759403792827718##d8Si]} -> {lq_tmp$x##8120 : (GHC.Types.IO {lq_tmp$x##8119 : (Neuro.Network {lq_tmp$x##8118 : a | $k_##8113[VV##8112:=lq_tmp$x##8118][VV##8114:=lq_tmp$x##8119][VV##8116:=lq_tmp$x##8120][lq_tmp$x##8103:=lq_anf$##7205759403792827716##d8Sg][lq_tmp$x##8104:=lq_anf$##7205759403792827718##d8Si]}) | $k_##8115[VV##8114:=lq_tmp$x##8119][VV##8116:=lq_tmp$x##8120][lq_tmp$x##8103:=lq_anf$##7205759403792827716##d8Sg][lq_tmp$x##8104:=lq_anf$##7205759403792827718##d8Si]}) | $k_##8117[VV##8116:=lq_tmp$x##8120][lq_tmp$x##8103:=lq_anf$##7205759403792827716##d8Sg][lq_tmp$x##8104:=lq_anf$##7205759403792827718##d8Si]\nlq_tmp$x##8120 == GHC.Base.. lq_anf$##7205759403792827716##d8Sg lq_anf$##7205759403792827718##d8Si lq_tmp$x##8105\nlq_tmp$x##8120 == lq_anf$##7205759403792827716##d8Sg (lq_anf$##7205759403792827718##d8Si lq_tmp$x##8105)}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":25,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{lq_tmp$x##6444 : (Neuro.Network a) | lq_tmp$x##6444 == n##a5NQ}"]]],[{"spanInfo":{"startLine":117,"endLine":118,"endCol":23,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$dNum_a7R4","{lq_tmp$x##7987 : (GHC.Num.Num a) | lq_tmp$x##7987 == GHC.Real.$p1Fractional\n                                    && lq_tmp$x##7987 == GHC.Real.$p1Fractional\n                                    && lq_tmp$x##7987 == $dNum_a7R4}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":14,"startCol":11,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##4445:a -> a"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":54,"startCol":51,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["err","{VV##4547 : GHC.Types.Double | $k_##4548}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":109,"startCol":106,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["out","{lq_tmp$x##4699 : (Data.Vector.Storable.Vector {lq_tmp$x##4698 : a | $k_##4555[VV##4554:=lq_tmp$x##4698][VV##4556:=lq_tmp$x##4699][VV##4563:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4570:=lq_tmp$x##4698][lq_tmp$x##4571:=lq_tmp$x##4699][lq_tmp$x##4575:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4580:=lq_tmp$x##4698][lq_tmp$x##4581:=lq_tmp$x##4699][lq_tmp$x##4583:=lq_tmp$x##4698][lq_tmp$x##4584:=lq_tmp$x##4699][lq_tmp$x##4585:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4596:=inp##a5XQ]\n                                                                     && $k_##4560[VV##4559:=lq_tmp$x##4698][VV##4561:=lq_tmp$x##4699][VV##4563:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4558:=inp##a5XQ][lq_tmp$x##4572:=inp##a5XQ][lq_tmp$x##4573:=lq_tmp$x##4698][lq_tmp$x##4574:=lq_tmp$x##4699][lq_tmp$x##4575:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4576:=inp##a5XQ][lq_tmp$x##4580:=lq_tmp$x##4698][lq_tmp$x##4581:=lq_tmp$x##4699][lq_tmp$x##4582:=inp##a5XQ][lq_tmp$x##4583:=lq_tmp$x##4698][lq_tmp$x##4584:=lq_tmp$x##4699][lq_tmp$x##4585:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4586:=inp##a5XQ][lq_tmp$x##4596:=inp##a5XQ]}) | $k_##4557[VV##4556:=lq_tmp$x##4699][VV##4563:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4571:=lq_tmp$x##4699][lq_tmp$x##4575:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4581:=lq_tmp$x##4699][lq_tmp$x##4585:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4596:=inp##a5XQ]\nk_##4562[VV##4561:=lq_tmp$x##4699][VV##4563:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4558:=inp##a5XQ][lq_tmp$x##4572:=inp##a5XQ][lq_tmp$x##4574:=lq_tmp$x##4699][lq_tmp$x##4575:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4576:=inp##a5XQ][lq_tmp$x##4581:=lq_tmp$x##4699][lq_tmp$x##4582:=inp##a5XQ][lq_tmp$x##4584:=lq_tmp$x##4699][lq_tmp$x##4585:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4586:=inp##a5XQ][lq_tmp$x##4596:=inp##a5XQ]\nlq_tmp$x##4699 == out##a5XR}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":65,"startCol":60,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827569","{lq_tmp$x##2825 : GHC.Types.Int | lq_tmp$x##2825 == n##a5Lf * m##a5Lg\n                                  && lq_tmp$x##2825 == GHC.Num.* n##a5Lf m##a5Lg}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":110,"startCol":75,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827624","{lq_tmp$x##4722 : GHC.Types.Double | $k_##4721[VV##4720:=lq_tmp$x##4722][lq_tmp$x##4709:=lq_anf$##7205759403792827621##d8QJ][lq_tmp$x##4710:=lq_anf$##7205759403792827623##d8QL]\n                                     && lq_tmp$x##4722 == GHC.Base.$ lq_anf$##7205759403792827621##d8QJ lq_anf$##7205759403792827623##d8QL}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":81,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827602","{lq_tmp$x##3928 : (GHC.Types.IO {lq_tmp$x##3927 : (Data.Vector.Vector {lq_tmp$x##3926 : (Internal.Matrix.Matrix {lq_tmp$x##3925 : a | $k_##3918[VV##3917:=lq_tmp$x##3925][VV##3919:=lq_tmp$x##3926][VV##3921:=lq_tmp$x##3927][VV##3923:=lq_tmp$x##3928][lq_tmp$x##3877:=lq_anf$##7205759403792827597##d8Ql][lq_tmp$x##3878:=lq_anf$##7205759403792827601##d8Qp]}) | $k_##3920[VV##3919:=lq_tmp$x##3926][VV##3921:=lq_tmp$x##3927][VV##3923:=lq_tmp$x##3928][lq_tmp$x##3877:=lq_anf$##7205759403792827597##d8Ql][lq_tmp$x##3878:=lq_anf$##7205759403792827601##d8Qp]}) | $k_##3922[VV##3921:=lq_tmp$x##3927][VV##3923:=lq_tmp$x##3928][lq_tmp$x##3877:=lq_anf$##7205759403792827597##d8Ql][lq_tmp$x##3878:=lq_anf$##7205759403792827601##d8Qp]}) | $k_##3924[VV##3923:=lq_tmp$x##3928][lq_tmp$x##3877:=lq_anf$##7205759403792827597##d8Ql][lq_tmp$x##3878:=lq_anf$##7205759403792827601##d8Qp]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##3928 == GHC.Base.$ lq_anf$##7205759403792827597##d8Ql lq_anf$##7205759403792827601##d8Qp}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":65,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827570","{lq_tmp$x##2846 : f (Data.Vector.Storable.Vector t) | lq_tmp$x##2846 == System.Random.MWC.uniformVector g##a5Lh lq_anf$##7205759403792827569##d8PT}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":25,"startCol":24,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n","{lq_tmp$x##7251 : (Neuro.Network {lq_tmp$x##7250 : a | $k_##7188[VV##7187:=lq_tmp$x##7250][VV##7189:=lq_tmp$x##7251]}) | $k_##7190[VV##7189:=lq_tmp$x##7251]\n                                                                                                                         && lq_tmp$x##7251 == n##a5KZ}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":23,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827700","{lq_tmp$x##7249 : GHC.Types.Int | $k_##7192[VV##7191:=lq_tmp$x##7249][lq_tmp$x##7197:=n##a5KZ][lq_tmp$x##7202:=lq_tmp$x##7249][lq_tmp$x##7204:=lq_tmp$x##7249][n##a5KZ:=n##a5KZ]\n                                  && lq_tmp$x##7249 == k##a5L0\n                                  && lq_tmp$x##7249 == lq_anf$##7205759403792827706##d8S6\n                                  && lq_tmp$x##7249 == lq_anf$##7205759403792827706##d8S6\n                                  && lq_tmp$x##7249 == lq_anf$##7205759403792827706##d8S6\n                                  && lq_tmp$x##7249 == lq_anf$##7205759403792827700##d8S0}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":60,"startCol":50,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827656","{lq_tmp$x##5717 : (Data.Vector.Storable.Vector {lq_tmp$x##5716 : a | $k_##5713[VV##5712:=lq_tmp$x##5716][VV##5714:=lq_tmp$x##5717][lq_tmp$x##5711:=os##a5NE]}) | $k_##5715[VV##5714:=lq_tmp$x##5717][lq_tmp$x##5711:=os##a5NE]\n                                                                                                                                                                 && lq_tmp$x##5717 == Data.Vector.last os##a5NE}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":57,"startCol":52,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827664","lq_tmp$x##5964:(Data.Vector.Storable.Vector a) -> lq_tmp$x##5965:(Data.Vector.Storable.Vector a) -> (Internal.Matrix.Matrix a)"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":62,"startCol":61,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827636","{lq_tmp$x##5126 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5126 == lq_anf$##7205759403792827635##d8QX\n                                                    && lq_tmp$x##5126 == GHC.Num.fromInteger lq_anf$##7205759403792827635##d8QX}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":18,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","(Neuro.Network a)"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":43,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Data.Binary.Get.Internal.$fFunctorGet","{lq_tmp$x##1981 : (GHC.Base.Functor Data.Binary.Get.Internal.Get) | lq_tmp$x##1981 == Data.Binary.Get.Internal.$fFunctorGet}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":31,"startCol":26,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":45,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","lq_tmp$x##5292:{lq_tmp$x##5285 : (Data.Vector.Storable.Vector {lq_tmp$x##5284 : a | $k_##4981[VV##4980:=lq_tmp$x##5284][VV##4982:=lq_tmp$x##5285]}) | $k_##4983[VV##4982:=lq_tmp$x##5285]} -> lq_tmp$x##5293:{lq_tmp$x##5287 : (Internal.Matrix.Matrix {lq_tmp$x##5286 : a | $k_##4986[VV##4985:=lq_tmp$x##5286][VV##4987:=lq_tmp$x##5287][inp##a5NA:=lq_tmp$x##5292]}) | $k_##4988[VV##4987:=lq_tmp$x##5287][inp##a5NA:=lq_tmp$x##5292]} -> {lq_tmp$x##5289 : (Data.Vector.Storable.Vector {lq_tmp$x##5288 : a | $k_##4991[VV##4990:=lq_tmp$x##5288][VV##4992:=lq_tmp$x##5289][inp##a5NA:=lq_tmp$x##5292][m##a5NB:=lq_tmp$x##5293]}) | $k_##4993[VV##4992:=lq_tmp$x##5289][inp##a5NA:=lq_tmp$x##5292][m##a5NB:=lq_tmp$x##5293]}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":26,"startCol":16,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827654","{lq_tmp$x##5681 : (Data.Vector.Storable.Vector {lq_tmp$x##5680 : a | $k_##5677[VV##5676:=lq_tmp$x##5680][VV##5678:=lq_tmp$x##5681][lq_tmp$x##5675:=os##a5NE]}) | $k_##5679[VV##5678:=lq_tmp$x##5681][lq_tmp$x##5675:=os##a5NE]\n                                                                                                                                                                 && lq_tmp$x##5681 == Data.Vector.last os##a5NE}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":59,"startCol":54,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","{lq_tmp$x##4336 : (Data.Vector.Storable.Vector a) | lq_tmp$x##4336 == input##a5MC}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":65,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{lq_tmp$x##8184 : (GHC.Base.Monad GHC.Types.IO) | lq_tmp$x##8184 == GHC.Base.$fMonadIO}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":20,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["alpha","a"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":48,"startCol":46,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["n'","{lq_tmp$x##7433 : (Neuro.Network a) | lq_tmp$x##7433 == Neuro.backpropOnce learningRate##a5KT act##a5KU act'##a5KV n##a5KZ samples##a5KX\n                                      && lq_tmp$x##7433 == Neuro.backpropOnce learningRate##a5KT act##a5KU act'##a5KV n##a5KZ samples##a5KX\n                                      && lq_tmp$x##7433 == n'##a5L1}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":13,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.backpropOnce","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a) =>\nlq_tmp$x##6792:a -> lq_tmp$x##6793:(lq_tmp$x##6782:a -> a) -> lq_tmp$x##6794:(lq_tmp$x##6783:a -> a) -> lq_tmp$x##6795:(Neuro.Network a) -> lq_tmp$x##6796:[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":54,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827560","{lq_tmp$x##2520 : [{lq_tmp$x##2532 : GHC.Types.Int | $k_##2531[VV##2530:=lq_tmp$x##2532][lq_tmp$x##2525:=hiddens##a5L3][lq_tmp$x##2526:=lq_anf$##7205759403792827559##d8PJ]}] | len lq_tmp$x##2520 == len hiddens##a5L3 + len lq_anf$##7205759403792827559##d8PJ\n                                                                                                                                                                                && lq_tmp$x##2520 == GHC.Base.++ hiddens##a5L3 lq_anf$##7205759403792827559##d8PJ}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":85,"startCol":78,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","{lq_tmp$x##7393 : [((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] | len lq_tmp$x##7393 >= 0\n                                                                                         && lq_tmp$x##7393 == samples##a5KX}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":7,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.deltas","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a)) =>\nlq_tmp$x##5333:(Neuro.Network a) -> lq_tmp$x##5334:(lq_tmp$x##5327:a -> a) -> lq_tmp$x##5335:(Data.Vector.Vector (Data.Vector.Storable.Vector a)) -> lq_tmp$x##5336:(Data.Vector.Storable.Vector a) -> (Data.Vector.Vector (Internal.Matrix.Matrix a))"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":31,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall a .\n      lq_tmp$x##1865:[a] -> {lq_tmp$x##1862 : (Data.Vector.Vector a) | vlen lq_tmp$x##1862 == len lq_tmp$x##1865} | VV == Data.Vector.fromList}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":43,"startCol":40,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827525","{lq_tmp$x##1946 : (Data.Binary.Get.Internal.Get [(Internal.Matrix.Matrix a)]) | lq_tmp$x##1946 == Data.Binary.Class.get}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":38,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827655","{lq_tmp$x##5698 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5698 == lq_anf$##7205759403792827654##d8Rg - expected##a5NF\n                                                    && lq_tmp$x##5698 == GHC.Num.- lq_anf$##7205759403792827654##d8Rg expected##a5NF}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":11,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","lq_tmp$x##7197:{VV##7189 : (Neuro.Network {VV##7187 : a | $k_##7188}) | $k_##7190} -> lq_tmp$x##7198:{VV##7191 : GHC.Types.Int | $k_##7192[n##a5KZ:=lq_tmp$x##7197]} -> {VV##7195 : (Neuro.Network {VV##7193 : a | $k_##7194[k##a5L0:=lq_tmp$x##7198][n##a5KZ:=lq_tmp$x##7197]}) | $k_##7196[k##a5L0:=lq_tmp$x##7198][n##a5KZ:=lq_tmp$x##7197]}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":109,"startCol":85,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827623","{lq_tmp$x##4692 : (Data.Vector.Storable.Vector a) | lq_tmp$x##4692 == lq_anf$##7205759403792827622##d8QK - out##a5XR\n                                                    && lq_tmp$x##4692 == GHC.Num.- lq_anf$##7205759403792827622##d8QK out##a5XR}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":48,"startCol":17,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827677","{lq_tmp$x##6409 : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | lq_tmp$x##6409 == Neuro.deltas n##a5NQ act'##a5NP lq_anf$##7205759403792827676##d8RC expectedOutput##a5NT}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":65,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$dFunctor_a7aK","{lq_tmp$x##2889 : (GHC.Base.Functor f) | lq_tmp$x##2889 == GHC.Base.$p1Applicative\n                                         && lq_tmp$x##2889 == GHC.Base.$p1Applicative\n                                         && lq_tmp$x##2889 == $dFunctor_a7aK}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":49,"startCol":29,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827661","{lq_tmp$x##5816 : (Data.Vector.Vector ({lq_tmp$x##5827 : (Data.Vector.Storable.Vector {lq_tmp$x##5826 : a | $k_##5823[VV##5822:=lq_tmp$x##5826][VV##5824:=lq_tmp$x##5827][lq_tmp$x##5819:=os##a5NE][lq_tmp$x##5820:=lq_anf$##7205759403792827660##d8Rm]}) | $k_##5825[VV##5824:=lq_tmp$x##5827][lq_tmp$x##5819:=os##a5NE][lq_tmp$x##5820:=lq_anf$##7205759403792827660##d8Rm]}, {lq_tmp$x##5833 : (Internal.Matrix.Matrix {lq_tmp$x##5832 : a | $k_##5829[VV##5828:=lq_tmp$x##5832][VV##5830:=lq_tmp$x##5833][lq_tmp$x##5819:=os##a5NE][lq_tmp$x##5820:=lq_anf$##7205759403792827660##d8Rm]}) | $k_##5831[VV##5830:=lq_tmp$x##5833][lq_tmp$x##5819:=os##a5NE][lq_tmp$x##5820:=lq_anf$##7205759403792827660##d8Rm]})) | lq_tmp$x##5816 == Data.Vector.zip os##a5NE lq_anf$##7205759403792827660##d8Rm}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":121,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall r a b .\n      lq_tmp$x##4852:(lq_tmp$x##4851:a -> b) -> lq_tmp$x##4853:a -> b | VV == GHC.Base.$}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":70,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827665","{lq_tmp$x##5973 : (Data.Vector.Vector {lq_tmp$x##5981 : (Data.Vector.Storable.Vector {lq_tmp$x##5980 : a | $k_##5977[VV##5976:=lq_tmp$x##5980][VV##5978:=lq_tmp$x##5981][lq_tmp$x##5975:=lq_anf$##7205759403792827663##d8Rp]}) | $k_##5979[VV##5978:=lq_tmp$x##5981][lq_tmp$x##5975:=lq_anf$##7205759403792827663##d8Rp]}) | lq_tmp$x##5973 == Data.Vector.tail lq_anf$##7205759403792827663##d8Rp}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":37,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["fp","{lq_tmp$x##8245 : [GHC.Types.Char] | len lq_tmp$x##8245 >= 0\n                                     && lq_tmp$x##8245 == fp##a5XV}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":8,"startCol":7,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":30,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##6347:a -> a"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":6,"startCol":3,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["$cput","forall a .\n(Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\nlq_tmp$x##2028:{VV##2031 : (Neuro.Network {VV##2029 : a | $k_##2030}) | $k_##2032} -> {VV##2035 : (Data.Binary.Put.PutM {VV##2033 : () | $k_##2034}) | $k_##2036}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":16,"startCol":15,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["s","{lq_tmp$x##7922 : a | lq_tmp$x##7922 == GHC.Float.tanh x##a5XS}"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":19,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.fromWeightMatrices","forall a .\n(Foreign.Storable.Storable<[]> a) =>\nlq_tmp$x##4021:(Data.Vector.Vector (Internal.Matrix.Matrix a)) -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":51,"startCol":50,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827700","{lq_tmp$x##7420 : GHC.Types.Int | $k_##7192[VV##7191:=lq_tmp$x##7420][lq_tmp$x##7197:=n##a5KZ][lq_tmp$x##7202:=lq_tmp$x##7420][lq_tmp$x##7204:=lq_tmp$x##7420][n##a5KZ:=n##a5KZ]\n                                  && lq_tmp$x##7420 == k##a5L0\n                                  && lq_tmp$x##7420 == lq_anf$##7205759403792827706##d8S6\n                                  && lq_tmp$x##7420 == lq_anf$##7205759403792827706##d8S6\n                                  && lq_tmp$x##7420 == lq_anf$##7205759403792827706##d8S6\n                                  && lq_tmp$x##7420 == lq_anf$##7205759403792827700##d8S0}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":53,"startCol":52,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827704","{lq_tmp$x##7401 : GHC.Types.Int | lq_tmp$x##7401 == lq_anf$##7205759403792827703##d8S3\n                                  && lq_tmp$x##7401 == GHC.Types.I# lq_anf$##7205759403792827703##d8S3}"]]],[{"spanInfo":{"startLine":98,"endLine":101,"endCol":45,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827682","{lq_tmp$x##6560 : (Data.Vector.Vector {lq_tmp$x##6559 : (Internal.Matrix.Matrix {lq_tmp$x##6558 : a | $k_##6543[VV##6542:=lq_tmp$x##6558][VV##6544:=lq_tmp$x##6559][lq_tmp$x##6530:=lq_tmp$x##6560][lq_tmp$x##6534:=lq_anf$##7205759403792827680##d8RG][lq_tmp$x##6535:=lq_anf$##7205759403792827678##d8RE][lq_tmp$x##6546:=lq_tmp$x##6558][lq_tmp$x##6547:=lq_tmp$x##6559]}) | $k_##6545[VV##6544:=lq_tmp$x##6559][lq_tmp$x##6530:=lq_tmp$x##6560][lq_tmp$x##6534:=lq_anf$##7205759403792827680##d8RG][lq_tmp$x##6535:=lq_anf$##7205759403792827678##d8RE][lq_tmp$x##6547:=lq_tmp$x##6559]}) | vlen lq_tmp$x##6560 == vlen lq_anf$##7205759403792827678##d8RE\nlq_tmp$x##6560 == Data.Vector.map lq_anf$##7205759403792827680##d8RG lq_anf$##7205759403792827678##d8RE\nlq_tmp$x##6560 == Data.Vector.map lq_anf$##7205759403792827680##d8RG lq_anf$##7205759403792827678##d8RE\nvlen lq_tmp$x##6560\nlq_tmp$x##6560 == lq_anf$##7205759403792827681##d8RH}"]]],[{"spanInfo":{"startLine":94,"endLine":94,"endCol":49,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827644","{lq_tmp$x##5570 : (Data.Vector.Storable.Vector {lq_tmp$x##5569 : a | $k_##5488[VV##5487:=lq_tmp$x##5569][VV##5489:=lq_tmp$x##5570]}) | $k_##5490[VV##5489:=lq_tmp$x##5570]\n                                                                                                                                       && lq_tmp$x##5570 == del##a5NM}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":39,"startCol":11,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["go","lq_tmp$x##3021:{VV##2979 : (System.Random.MWC.Gen {VV##2977 : (Control.Monad.Primitive.PrimState {VV##2975 : m | $k_##2976}) | $k_##2978}) | $k_##2980} -> lq_tmp$x##3022:{VV##3000 : [{VV##2988 : ({VV##2981 : GHC.Types.Int | $k_##2982[ds_d8IR:=lq_tmp$x##3021]}, {VV##2983 : GHC.Types.Int | $k_##2984[ds_d8IR:=lq_tmp$x##3021]})<\\lq_tmp$x##3024 VV -> {VV##2986 : GHC.Types.Int | $k_##2987[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2985:=lq_tmp$x##3024][lq_tmp$x##3018:=lq_tmp$x##3024]}> | $k_##2989[ds_d8IR:=lq_tmp$x##3021]}]<\\lq_tmp$x##3026 VV -> {VV##2998 : ({VV##2991 : GHC.Types.Int | $k_##2992[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2990:=lq_tmp$x##3026][lq_tmp$x##3020:=lq_tmp$x##3026]}, {VV##2993 : GHC.Types.Int | $k_##2994[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2990:=lq_tmp$x##3026][lq_tmp$x##3020:=lq_tmp$x##3026]})<\\lq_tmp$x##3025 VV -> {VV##2996 : GHC.Types.Int | $k_##2997[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2990:=lq_tmp$x##3026][lq_tmp$x##2995:=lq_tmp$x##3025][lq_tmp$x##3019:=lq_tmp$x##3025][lq_tmp$x##3020:=lq_tmp$x##3026]}> | $k_##2999[ds_d8IR:=lq_tmp$x##3021][lq_tmp$x##2990:=lq_tmp$x##3026][lq_tmp$x##3020:=lq_tmp$x##3026]}> | $k_##3001[ds_d8IR:=lq_tmp$x##3021]} -> lq_tmp$x##3023:{VV##3006 : (Data.Vector.Vector {VV##3004 : (Internal.Matrix.Matrix {VV##3002 : t | $k_##3003[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022]}) | $k_##3005[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022]}) | $k_##3007[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022]} -> {VV##3016 : {VV##3008 : m | $k_##3009[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]} {VV##3014 : (Data.Vector.Vector {VV##3012 : (Internal.Matrix.Matrix {VV##3010 : t | $k_##3011[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]}) | $k_##3013[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]}) | $k_##3015[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]} | $k_##3017[ds_d8IR:=lq_tmp$x##3021][ds_d8IS:=lq_tmp$x##3022][ms##a5L8:=lq_tmp$x##3023]}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":111,"startCol":49,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827620","{lq_tmp$x##4575 : ({lq_tmp$x##4569 : (Data.Vector.Storable.Vector {lq_tmp$x##4568 : a | $k_##4551[VV##4550:=lq_tmp$x##4568][VV##4552:=lq_tmp$x##4569][VV##4563:=lq_tmp$x##4575]}) | $k_##4553[VV##4552:=lq_tmp$x##4569][VV##4563:=lq_tmp$x##4575]}, {lq_tmp$x##4571 : (Data.Vector.Storable.Vector {lq_tmp$x##4570 : a | $k_##4555[VV##4554:=lq_tmp$x##4570][VV##4556:=lq_tmp$x##4571][VV##4563:=lq_tmp$x##4575]}) | $k_##4557[VV##4556:=lq_tmp$x##4571][VV##4563:=lq_tmp$x##4575]})<\\lq_tmp$x##4576 VV -> {lq_tmp$x##4574 : (Data.Vector.Storable.Vector {lq_tmp$x##4573 : a | $k_##4560[VV##4559:=lq_tmp$x##4573][VV##4561:=lq_tmp$x##4574][VV##4563:=lq_tmp$x##4575][lq_tmp$x##4558:=lq_tmp$x##4576][lq_tmp$x##4572:=lq_tmp$x##4576]}) | $k_##4562[VV##4561:=lq_tmp$x##4574][VV##4563:=lq_tmp$x##4575][lq_tmp$x##4558:=lq_tmp$x##4576][lq_tmp$x##4572:=lq_tmp$x##4576]}> | $k_##4564[VV##4563:=lq_tmp$x##4575]\nlq_tmp$x##4575 == ds_d8Hl}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":81,"startCol":47,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827600","{lq_tmp$x##3775 : (Data.Vector.Vector {lq_tmp$x##3781 : (Internal.Matrix.Matrix {lq_tmp$x##3780 : a | $k_##3777[VV##3776:=lq_tmp$x##3780][VV##3778:=lq_tmp$x##3781]}) | $k_##3779[VV##3778:=lq_tmp$x##3781]}) | lq_tmp$x##3775 == Data.Vector.empty}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":64,"startCol":46,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827640","{lq_tmp$x##5235 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5235 == Internal.Vector.vjoin lq_anf$##7205759403792827639##d8R1}"]]],[{"spanInfo":{"startLine":101,"endLine":101,"endCol":45,"startCol":43,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827678","{lq_tmp$x##6556 : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | lq_tmp$x##6556 == Neuro.deltas n##a5NQ act'##a5NP lq_anf$##7205759403792827676##d8RC expectedOutput##a5NT\n                                                                    && lq_tmp$x##6556 == Neuro.deltas n##a5NQ act'##a5NP lq_anf$##7205759403792827676##d8RC expectedOutput##a5NT\n                                                                    && 0 <= vlen lq_tmp$x##6556\n                                                                    && lq_tmp$x##6556 == lq_anf$##7205759403792827677##d8RD\n                                                                    && 0 <= vlen lq_tmp$x##6556\n                                                                    && lq_tmp$x##6556 == Data.Vector.Vector lq_anf$##7205759403792827690##d8RQ lq_anf$##7205759403792827691##d8RR lq_anf$##7205759403792827692##d8RS\n                                                                    && lq_tmp$x##6556 == Data.Vector.Vector lq_anf$##7205759403792827690##d8RQ lq_anf$##7205759403792827691##d8RR lq_anf$##7205759403792827692##d8RS\n                                                                    && lq_tmp$x##6556 == Data.Vector.Vector lq_anf$##7205759403792827690##d8RQ lq_anf$##7205759403792827691##d8RR lq_anf$##7205759403792827692##d8RS\n                                                                    && 0 <= vlen lq_tmp$x##6556\n                                                                    && lq_tmp$x##6556 == lq_anf$##7205759403792827678##d8RE}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":82,"startCol":80,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["os","{lq_tmp$x##6000 : (Data.Vector.Vector (Data.Vector.Storable.Vector a)) | 0 <= vlen lq_tmp$x##6000\n                                                                         && lq_tmp$x##6000 == os##a5NE}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":33,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827717","lq_tmp$x##8045:Data.ByteString.Lazy.Internal.ByteString -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":20,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ms","{VV##3006 : (Data.Vector.Vector {VV##3004 : (Internal.Matrix.Matrix {VV##3002 : t | $k_##3003[ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS]}) | $k_##3005[ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS]}) | $k_##3007[ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS]}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":40,"startCol":38,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827572","{lq_tmp$x##3129 : (Data.Vector.Vector {lq_tmp$x##3128 : (Internal.Matrix.Matrix {lq_tmp$x##3127 : t | $k_##3003[VV##3002:=lq_tmp$x##3127][VV##3004:=lq_tmp$x##3128][VV##3006:=lq_tmp$x##3129][ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS][lq_tmp$x##3073:=lq_tmp$x##3127][lq_tmp$x##3074:=lq_tmp$x##3128][lq_tmp$x##3075:=lq_tmp$x##3129][lq_tmp$x##3077:=lq_tmp$x##3127][lq_tmp$x##3078:=lq_tmp$x##3128][lq_tmp$x##3079:=lq_tmp$x##3129]\n                                                                                                      && $k_##3003[VV##3002:=lq_tmp$x##3127][VV##3004:=lq_tmp$x##3128][VV##3006:=lq_anf$##7205759403792827572##d8PW][ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS][lq_tmp$x##3073:=lq_tmp$x##3127][lq_tmp$x##3074:=lq_tmp$x##3128][lq_tmp$x##3075:=lq_anf$##7205759403792827572##d8PW][lq_tmp$x##3077:=lq_tmp$x##3127][lq_tmp$x##3078:=lq_tmp$x##3128][lq_tmp$x##3079:=lq_anf$##7205759403792827572##d8PW][lq_tmp$x##3089:=lq_anf$##7205759403792827573##d8PX][lq_tmp$x##3090:=lq_anf$##7205759403792827574##d8PY][lq_tmp$x##3091:=lq_anf$##7205759403792827575##d8PZ]}) | $k_##3005[VV##3004:=lq_tmp$x##3128][VV##3006:=lq_tmp$x##3129][ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS][lq_tmp$x##3074:=lq_tmp$x##3128][lq_tmp$x##3075:=lq_tmp$x##3129][lq_tmp$x##3078:=lq_tmp$x##3128][lq_tmp$x##3079:=lq_tmp$x##3129]\nk_##3005[VV##3004:=lq_tmp$x##3128][VV##3006:=lq_anf$##7205759403792827572##d8PW][ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS][lq_tmp$x##3074:=lq_tmp$x##3128][lq_tmp$x##3075:=lq_anf$##7205759403792827572##d8PW][lq_tmp$x##3078:=lq_tmp$x##3128][lq_tmp$x##3079:=lq_anf$##7205759403792827572##d8PW][lq_tmp$x##3089:=lq_anf$##7205759403792827573##d8PX][lq_tmp$x##3090:=lq_anf$##7205759403792827574##d8PY][lq_tmp$x##3091:=lq_anf$##7205759403792827575##d8PZ]}) | $k_##3007[VV##3006:=lq_tmp$x##3129][ds_d8IR:=ds_d8IR][ds_d8IS:=ds_d8IS][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3022:=ds_d8IS][lq_tmp$x##3075:=lq_tmp$x##3129][lq_tmp$x##3079:=lq_tmp$x##3129]\nvlen lq_tmp$x##3129\nlq_tmp$x##3129 == ms##a5L8\nvlen lq_tmp$x##3129\nlq_tmp$x##3129 == Data.Vector.Vector lq_anf$##7205759403792827573##d8PX lq_anf$##7205759403792827574##d8PY lq_anf$##7205759403792827575##d8PZ\nlq_tmp$x##3129 == Data.Vector.Vector lq_anf$##7205759403792827573##d8PX lq_anf$##7205759403792827574##d8PY lq_anf$##7205759403792827575##d8PZ\nlq_tmp$x##3129 == Data.Vector.Vector lq_anf$##7205759403792827573##d8PX lq_anf$##7205759403792827574##d8PY lq_anf$##7205759403792827575##d8PZ\nvlen lq_tmp$x##3129\nlq_tmp$x##3129 == lq_anf$##7205759403792827572##d8PW}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":48,"startCol":41,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["samples","[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))]"]]],[{"spanInfo":{"startLine":72,"endLine":74,"endCol":39,"startCol":34,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827579","{lq_tmp$x##3292 : (Internal.Matrix.Matrix {lq_tmp$x##3291 : t | $k_##2747[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2746:=lq_tmp$x##3291][VV##2748:=lq_tmp$x##3292][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3252:=lq_tmp$x##3291][lq_tmp$x##3253:=lq_tmp$x##3292][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR][lq_tmp$x##3268:=lq_tmp$x##3291]}) | $k_##2749[fix$36$$36$dPrimMonad_a7Jl:=fix$36$$36$dPrimMonad_a7Kw][fix$36$$36$dStorable_a7Jk:=fix$36$$36$dStorable_a7Kv][fix$36$$36$dVariate_a7Jm:=fix$36$$36$dVariate_a7Kx][VV##2748:=lq_tmp$x##3292][lq_tmp$x##2731:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##2734:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##2737:=ds_d8IR][lq_tmp$x##3253:=lq_tmp$x##3292][lq_tmp$x##3261:=fix$36$$36$dStorable_a7Kv][lq_tmp$x##3262:=fix$36$$36$dPrimMonad_a7Kw][lq_tmp$x##3263:=fix$36$$36$dVariate_a7Kx][lq_tmp$x##3264:=lq_anf$##7205759403792827577##d8Q1][lq_tmp$x##3265:=lq_anf$##7205759403792827578##d8Q2][lq_tmp$x##3266:=ds_d8IR]\nlq_tmp$x##3292 == mat##a5Le}"]]],[{"spanInfo":{"startLine":95,"endLine":95,"endCol":14,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["deriv","lq_tmp$x##5457:(Data.Vector.Storable.Vector a) -> (Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":39,"startCol":31,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827631","{lq_tmp$x##5066 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5066 == Internal.Container.#> m##a5NB lq_anf$##7205759403792827629##d8QR}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":48,"startCol":34,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["expectedOutput","{lq_tmp$x##6453 : (Data.Vector.Storable.Vector a) | lq_tmp$x##6453 == expectedOutput##a5NT}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":39,"startCol":32,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["nInputs","{lq_tmp$x##2609 : GHC.Types.Int | lq_tmp$x##2609 == nInputs##a5L2}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":121,"startCol":42,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827627","{lq_tmp$x##4781 : GHC.Types.Double | $k_##4780[VV##4779:=lq_tmp$x##4781][lq_tmp$x##83:=lq_anf$##7205759403792827625##d8QN][lq_tmp$x##86:=lq_anf$##7205759403792827626##d8QO][lq_tmp$x##87:=samples##a5XO]\n                                     && lq_tmp$x##4781 == Data.Foldable.foldl' lq_anf$##7205759403792827625##d8QN lq_anf$##7205759403792827626##d8QO samples##a5XO}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":62,"startCol":61,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827611","{lq_tmp$x##4245 : (Data.Vector.Storable.Vector a) | lq_tmp$x##4245 == lq_anf$##7205759403792827610##d8Qy\n                                                    && lq_tmp$x##4245 == GHC.Num.fromInteger lq_anf$##7205759403792827610##d8Qy}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":61,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall r a b .\n      lq_tmp$x##8310:(lq_tmp$x##8309:a -> b) -> lq_tmp$x##8311:a -> b | VV == GHC.Base.$}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":36,"startCol":33,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["ds_d8IR","{lq_tmp$x##3279 : (System.Random.MWC.Gen {lq_tmp$x##3278 : (Control.Monad.Primitive.PrimState {lq_tmp$x##3277 : m | $k_##2976[VV##2975:=lq_tmp$x##3277][VV##2977:=lq_tmp$x##3278][VV##2979:=lq_tmp$x##3279]}) | $k_##2978[VV##2977:=lq_tmp$x##3278][VV##2979:=lq_tmp$x##3279]}) | $k_##2980[VV##2979:=lq_tmp$x##3279]\n                                                                                                                                                                                                                                                                                  && lq_tmp$x##3279 == ds_d8IR}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":51,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["hiddens","{lq_tmp$x##2639 : [GHC.Types.Int] | len lq_tmp$x##2639 >= 0\n                                    && lq_tmp$x##2639 == hiddens##a5L3}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":40,"startCol":39,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["k","{lq_tmp$x##7672 : GHC.Types.Int | $k_##7615[VV##7614:=lq_tmp$x##7672]\n                                  && lq_tmp$x##7672 == k##a505}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":59,"startCol":54,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","{lq_tmp$x##5217 : (Data.Vector.Storable.Vector a) | lq_tmp$x##5217 == input##a5Ny}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":110,"startCol":106,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827682","{lq_tmp$x##6669 : (Data.Vector.Vector {lq_tmp$x##6668 : (Internal.Matrix.Matrix {lq_tmp$x##6667 : a | $k_##6543[VV##6542:=lq_tmp$x##6667][VV##6544:=lq_tmp$x##6668][lq_tmp$x##6530:=lq_tmp$x##6669][lq_tmp$x##6534:=lq_anf$##7205759403792827680##d8RG][lq_tmp$x##6535:=lq_anf$##7205759403792827678##d8RE][lq_tmp$x##6546:=lq_tmp$x##6667][lq_tmp$x##6547:=lq_tmp$x##6668][lq_tmp$x##6558:=lq_tmp$x##6667][lq_tmp$x##6559:=lq_tmp$x##6668][lq_tmp$x##6560:=lq_tmp$x##6669][lq_tmp$x##6562:=lq_tmp$x##6667][lq_tmp$x##6563:=lq_tmp$x##6668][lq_tmp$x##6564:=lq_tmp$x##6669]\n                                                                                                      && $k_##6543[VV##6542:=lq_tmp$x##6667][VV##6544:=lq_tmp$x##6668][lq_tmp$x##6530:=lq_anf$##7205759403792827682##d8RI][lq_tmp$x##6534:=lq_anf$##7205759403792827680##d8RG][lq_tmp$x##6535:=lq_anf$##7205759403792827678##d8RE][lq_tmp$x##6546:=lq_tmp$x##6667][lq_tmp$x##6547:=lq_tmp$x##6668][lq_tmp$x##6558:=lq_tmp$x##6667][lq_tmp$x##6559:=lq_tmp$x##6668][lq_tmp$x##6560:=lq_anf$##7205759403792827682##d8RI][lq_tmp$x##6562:=lq_tmp$x##6667][lq_tmp$x##6563:=lq_tmp$x##6668][lq_tmp$x##6564:=lq_anf$##7205759403792827682##d8RI][lq_tmp$x##6574:=lq_anf$##7205759403792827687##d8RN][lq_tmp$x##6575:=lq_anf$##7205759403792827688##d8RO][lq_tmp$x##6576:=lq_anf$##7205759403792827689##d8RP]}) | $k_##6545[VV##6544:=lq_tmp$x##6668][lq_tmp$x##6530:=lq_tmp$x##6669][lq_tmp$x##6534:=lq_anf$##7205759403792827680##d8RG][lq_tmp$x##6535:=lq_anf$##7205759403792827678##d8RE][lq_tmp$x##6547:=lq_tmp$x##6668][lq_tmp$x##6559:=lq_tmp$x##6668][lq_tmp$x##6560:=lq_tmp$x##6669][lq_tmp$x##6563:=lq_tmp$x##6668][lq_tmp$x##6564:=lq_tmp$x##6669]\nk_##6545[VV##6544:=lq_tmp$x##6668][lq_tmp$x##6530:=lq_anf$##7205759403792827682##d8RI][lq_tmp$x##6534:=lq_anf$##7205759403792827680##d8RG][lq_tmp$x##6535:=lq_anf$##7205759403792827678##d8RE][lq_tmp$x##6547:=lq_tmp$x##6668][lq_tmp$x##6559:=lq_tmp$x##6668][lq_tmp$x##6560:=lq_anf$##7205759403792827682##d8RI][lq_tmp$x##6563:=lq_tmp$x##6668][lq_tmp$x##6564:=lq_anf$##7205759403792827682##d8RI][lq_tmp$x##6574:=lq_anf$##7205759403792827687##d8RN][lq_tmp$x##6575:=lq_anf$##7205759403792827688##d8RO][lq_tmp$x##6576:=lq_anf$##7205759403792827689##d8RP]}) | vlen lq_tmp$x##6669 == vlen lq_anf$##7205759403792827678##d8RE\nlq_tmp$x##6669 == Data.Vector.map lq_anf$##7205759403792827680##d8RG lq_anf$##7205759403792827678##d8RE\nlq_tmp$x##6669 == Data.Vector.map lq_anf$##7205759403792827680##d8RG lq_anf$##7205759403792827678##d8RE\nvlen lq_tmp$x##6669\nlq_tmp$x##6669 == lq_anf$##7205759403792827681##d8RH\nvlen lq_tmp$x##6669\nlq_tmp$x##6669 == Data.Vector.Vector lq_anf$##7205759403792827687##d8RN lq_anf$##7205759403792827688##d8RO lq_anf$##7205759403792827689##d8RP\nlq_tmp$x##6669 == Data.Vector.Vector lq_anf$##7205759403792827687##d8RN lq_anf$##7205759403792827688##d8RO lq_anf$##7205759403792827689##d8RP\nlq_tmp$x##6669 == Data.Vector.Vector lq_anf$##7205759403792827687##d8RN lq_anf$##7205759403792827688##d8RO lq_anf$##7205759403792827689##d8RP\nvlen lq_tmp$x##6669\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      && lq_tmp$x##6669 == lq_anf$##7205759403792827682##d8RI}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":64,"startCol":63,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["m","{lq_tmp$x##2829 : GHC.Types.Int | $k_##2736[VV##2735:=lq_tmp$x##2829][lq_tmp$x##2731:=n##a5Lf]\n                                  && lq_tmp$x##2829 == m##a5Lg}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":31,"startCol":30,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["k","{VV##7614 : GHC.Types.Int | $k_##7615}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":24,"startCol":23,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["g","{VV##2742 : (System.Random.MWC.Gen {VV##2740 : (Control.Monad.Primitive.PrimState {VV##2738 : f | $k_##2739[lq_tmp$x##2731:=n##a5Lf][lq_tmp$x##2734:=m##a5Lg]}) | $k_##2741[lq_tmp$x##2731:=n##a5Lf][lq_tmp$x##2734:=m##a5Lg]}) | $k_##2743[lq_tmp$x##2731:=n##a5Lf][lq_tmp$x##2734:=m##a5Lg]}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":95,"startCol":92,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["net","{lq_tmp$x##4672 : (Neuro.Network a) | lq_tmp$x##4672 == net##a5XN}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":36,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827568","lq_tmp$x##2808:(Data.Vector.Storable.Vector t) -> (Internal.Matrix.Matrix t)"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":72,"startCol":69,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["err","{lq_tmp$x##4745 : GHC.Types.Double | $k_##4548[VV##4547:=lq_tmp$x##4745]\n                                     && lq_tmp$x##4745 == err##a5XP}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":103,"startCol":100,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["inp","{lq_tmp$x##4678 : (Data.Vector.Storable.Vector {lq_tmp$x##4677 : a | $k_##4551[VV##4550:=lq_tmp$x##4677][VV##4552:=lq_tmp$x##4678][VV##4563:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4568:=lq_tmp$x##4677][lq_tmp$x##4569:=lq_tmp$x##4678][lq_tmp$x##4575:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4578:=lq_tmp$x##4677][lq_tmp$x##4579:=lq_tmp$x##4678][lq_tmp$x##4585:=lq_anf$##7205759403792827620##d8QI]}) | $k_##4553[VV##4552:=lq_tmp$x##4678][VV##4563:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4569:=lq_tmp$x##4678][lq_tmp$x##4575:=lq_anf$##7205759403792827620##d8QI][lq_tmp$x##4579:=lq_tmp$x##4678][lq_tmp$x##4585:=lq_anf$##7205759403792827620##d8QI]\n                                                                                                                                                                                                                                                                                                                                                                                                                             && lq_tmp$x##4678 == inp##a5XQ}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":32,"startCol":27,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["input","(Data.Vector.Storable.Vector a)"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":45,"startCol":44,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["f","lq_tmp$x##4410:{lq_tmp$x##4403 : (Data.Vector.Storable.Vector {lq_tmp$x##4402 : a | $k_##4100[VV##4099:=lq_tmp$x##4402][VV##4101:=lq_tmp$x##4403]}) | $k_##4102[VV##4101:=lq_tmp$x##4403]} -> lq_tmp$x##4411:{lq_tmp$x##4405 : (Internal.Matrix.Matrix {lq_tmp$x##4404 : a | $k_##4105[VV##4104:=lq_tmp$x##4404][VV##4106:=lq_tmp$x##4405][inp##a5ME:=lq_tmp$x##4410]}) | $k_##4107[VV##4106:=lq_tmp$x##4405][inp##a5ME:=lq_tmp$x##4410]} -> {lq_tmp$x##4407 : (Data.Vector.Storable.Vector {lq_tmp$x##4406 : a | $k_##4110[VV##4109:=lq_tmp$x##4406][VV##4111:=lq_tmp$x##4407][inp##a5ME:=lq_tmp$x##4410][m##a5MF:=lq_tmp$x##4411]}) | $k_##4112[VV##4111:=lq_tmp$x##4407][inp##a5ME:=lq_tmp$x##4410][m##a5MF:=lq_tmp$x##4411]}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":11,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.trainUntil","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a) =>\nlq_tmp$x##7129:(lq_tmp$x##7113:GHC.Types.Int -> lq_tmp$x##7114:(Neuro.Network a) -> lq_tmp$x##7115:[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> GHC.Types.Bool) -> lq_tmp$x##7130:a -> lq_tmp$x##7131:(lq_tmp$x##7119:a -> a) -> lq_tmp$x##7132:(lq_tmp$x##7120:a -> a) -> lq_tmp$x##7133:(Neuro.Network a) -> lq_tmp$x##7134:[((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a))] -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":68,"endLine":77,"endCol":52,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827567","{lq_tmp$x##2765 : (GHC.Base.Applicative f) | lq_tmp$x##2765 == GHC.Base.$p1Monad}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":59,"startCol":58,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827708","{lq_tmp$x##7446 : GHC.Types.Int | lq_tmp$x##7446 == lq_anf$##7205759403792827707##d8S7\n                                  && lq_tmp$x##7446 == GHC.Types.I# lq_anf$##7205759403792827707##d8S7}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":39,"startCol":20,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["GHC.Base.$","{VV : forall r a b .\n      lq_tmp$x##5089:(lq_tmp$x##5088:a -> b) -> lq_tmp$x##5090:a -> b | VV == GHC.Base.$}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":12,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.saveNetwork","forall a .\n(Foreign.Storable.Storable<[]> a, Internal.Matrix.Element<[]> a, Data.Binary.Class.Binary<[]> a) =>\nlq_tmp$x##8204:[GHC.Types.Char] -> lq_tmp$x##8205:(Neuro.Network a) -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":28,"startCol":25,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["act","lq_tmp$x##4176:a -> a"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":39,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827629","{lq_tmp$x##5079 : (Data.Vector.Storable.Vector {lq_tmp$x##5078 : a | $k_##4981[VV##4980:=lq_tmp$x##5078][VV##4982:=lq_tmp$x##5079][lq_tmp$x##4994:=lq_tmp$x##5078][lq_tmp$x##4995:=lq_tmp$x##5079][lq_tmp$x##4997:=lq_tmp$x##5078][lq_tmp$x##4998:=lq_tmp$x##5079]\n                                                                     && $k_##4981[VV##4980:=lq_tmp$x##5078][VV##4982:=lq_anf$##7205759403792827629##d8QR][lq_tmp$x##4994:=lq_tmp$x##5078][lq_tmp$x##4995:=lq_anf$##7205759403792827629##d8QR][lq_tmp$x##4997:=lq_tmp$x##5078][lq_tmp$x##4998:=lq_anf$##7205759403792827629##d8QR][lq_tmp$x##5007:=lq_anf$##7205759403792827632##d8QU][lq_tmp$x##5008:=lq_anf$##7205759403792827633##d8QV][lq_tmp$x##5009:=lq_anf$##7205759403792827634##d8QW]}) | $k_##4983[VV##4982:=lq_tmp$x##5079][lq_tmp$x##4995:=lq_tmp$x##5079][lq_tmp$x##4998:=lq_tmp$x##5079]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5079 == inp##a5NA\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5079 == Data.Vector.Storable.Vector lq_anf$##7205759403792827632##d8QU lq_anf$##7205759403792827633##d8QV lq_anf$##7205759403792827634##d8QW\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5079 == Data.Vector.Storable.Vector lq_anf$##7205759403792827632##d8QU lq_anf$##7205759403792827633##d8QV lq_anf$##7205759403792827634##d8QW\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5079 == Data.Vector.Storable.Vector lq_anf$##7205759403792827632##d8QU lq_anf$##7205759403792827633##d8QV lq_anf$##7205759403792827634##d8QW\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5079 == lq_anf$##7205759403792827629##d8QR}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":14,"startCol":1,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Neuro.updateNetwork","forall a .\n(GHC.Float.Floating<[]> (Data.Vector.Storable.Vector a), GHC.Float.Floating<[]> a, Internal.Numeric.Numeric<[]> a, Foreign.Storable.Storable<[]> a, GHC.Num.Num<[]> (Data.Vector.Storable.Vector a), Internal.Numeric.Container<[]> Data.Vector.Storable.Vector a) =>\nlq_tmp$x##6108:a -> lq_tmp$x##6109:(lq_tmp$x##6099:a -> a) -> lq_tmp$x##6110:(lq_tmp$x##6100:a -> a) -> lq_tmp$x##6111:(Neuro.Network a) -> lq_tmp$x##6112:((Data.Vector.Storable.Vector a), (Data.Vector.Storable.Vector a)) -> (Neuro.Network a)"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":33,"startCol":19,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827701","{lq_tmp$x##7236 : GHC.Types.Bool | lq_tmp$x##7236 == pr##a5KS lq_anf$##7205759403792827700##d8S0 n##a5KZ samples##a5KX}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":15,"startCol":12,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["inp","{VV##4982 : (Data.Vector.Storable.Vector {VV##4980 : a | $k_##4981}) | $k_##4983}"]]],[{"spanInfo":{"startLine":118,"endLine":118,"endCol":23,"startCol":22,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827714","{lq_tmp$x##7952 : a | lq_tmp$x##7952 == lq_anf$##7205759403792827713##d8Sd\n                      && lq_tmp$x##7952 == GHC.Num.fromInteger lq_anf$##7205759403792827713##d8Sd}"]]],[{"spanInfo":{"startLine":71,"endLine":74,"endCol":39,"startCol":9,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827578","{lq_tmp$x##3227 : GHC.Types.Int | $k_##2984[VV##2983:=lq_tmp$x##3227][VV##2988:=lq_anf$##7205759403792827576##d8Q0][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3032:=lq_tmp$x##3227][lq_tmp$x##3035:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3131:=lq_tmp$x##3227][lq_tmp$x##3134:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3177:=lq_tmp$x##3227][lq_tmp$x##3180:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3184:=lq_tmp$x##3227][lq_tmp$x##3187:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3198:=n##a5La]\n                                  && $k_##2987[VV##2986:=lq_tmp$x##3227][VV##2988:=lq_anf$##7205759403792827576##d8Q0][VV##3000:=lq_anf$##7205759403792827571##d8PV][ds_d8IR:=ds_d8IR][lq_tmp$x##2985:=n##a5La][lq_tmp$x##3018:=n##a5La][lq_tmp$x##3021:=ds_d8IR][lq_tmp$x##3024:=n##a5La][lq_tmp$x##3033:=n##a5La][lq_tmp$x##3034:=lq_tmp$x##3227][lq_tmp$x##3035:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3042:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3043:=n##a5La][lq_tmp$x##3132:=n##a5La][lq_tmp$x##3133:=lq_tmp$x##3227][lq_tmp$x##3134:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3141:=lq_anf$##7205759403792827571##d8PV][lq_tmp$x##3142:=n##a5La][lq_tmp$x##3178:=n##a5La][lq_tmp$x##3179:=lq_tmp$x##3227][lq_tmp$x##3180:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3181:=n##a5La][lq_tmp$x##3184:=lq_tmp$x##3227][lq_tmp$x##3185:=n##a5La][lq_tmp$x##3186:=lq_tmp$x##3227][lq_tmp$x##3187:=lq_anf$##7205759403792827576##d8Q0][lq_tmp$x##3188:=n##a5La][lq_tmp$x##3198:=n##a5La]\n                                  && lq_tmp$x##3227 == m##a5Lb}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":46,"startCol":36,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["Codec.Compression.Zlib.decompress","lq_tmp$x##8088:Data.ByteString.Lazy.Internal.ByteString -> Data.ByteString.Lazy.Internal.ByteString"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":73,"startCol":35,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[["lq_anf$##7205759403792827641","{VV : (Data.Vector.Vector (Internal.Matrix.Matrix a)) | VV ~~ ds_d8wJ}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":24,"startCol":18,"filename":"/home/alexander/haskell/project/neuroLiquid/app/Neuro.hs"},"realSpan":true},[[null,"{VV : forall a .\n      lq_tmp$x##27:a -> (GHC.Types.IO a) | VV == GHC.Base.return}"]]]],"o_bots":[],"o_result":{"tag":"Safe","contents":{"numCstr":0,"numIter":0,"numBrkt":0,"numChck":0,"numVald":0}}}